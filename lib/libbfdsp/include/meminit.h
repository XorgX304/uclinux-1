#pragma once
#ifndef __NO_BUILTIN
#pragma GCC system_header /* meminit.h */
#endif
/************************************************************************
 *
 * meminit.h
 *
 * (c) Copyright 2002-2003 Analog Devices, Inc.
 * This file is subject to the terms and conditions of the GNU Library General
 * Public License. See the file "COPYING.LIB" in the main directory of this
 * archive for more details.
 *
 * Non-LGPL License also available as part of VisualDSP++
 * http://www.analog.com/processors/resources/crosscore/visualDspDevSoftware.html
 *
 *
 ************************************************************************/

/* Definitions for the run-time initialisation routine that (re)initialises
** memory from a table generated by the MemInit tool.
*/

#ifndef _MEMINIT_H
#define _MEMINIT_H

#define MI_MAGIC_BLACKFIN	0xFFFF

/* Block header */

struct mi_block_header_t {
  char *addr;
  unsigned long byte_count;
  unsigned long flags;
  unsigned long pattern_bytes;
};

#define MI_MEM_BITS	0x03
#define MI_MEM_POS	0x00
#define MI_MEM_DM	0x00
#define MI_MEM_PM	0x01
#define MI_MEM_US	0x02
/* other values reserved */

#define MI_WS_BITS	0x3C
#define MI_WS_POS	0x02
#define MI_WS_8BITS	0x00
#define MI_WS_16BITS	0x01
#define MI_WS_24BITS	0x02
#define MI_WS_32BITS	0x03
#define MI_WS_40BITS	0x04
#define MI_WS_48BITS	0x05
#define MI_WS_64BITS	0x06
/* other values reserved */

#define MI_BT_BITS	0x1C0
#define MI_BT_POS	0x06
#define MI_BT_RAW	0x00
#define MI_BT_ZERO	0x01
#define MI_BT_CALL	0x02
#define MI_BT_REP	0x03
/* other values reserved */

struct mi_magic_t {
  unsigned char version;
  unsigned char reserved;
  unsigned short magic;
};

struct mi_table_header_t {
  struct mi_magic_t magic;
  unsigned long num_blocks;
  struct mi_block_header_t blocks[1];	/* arbitrary number of blocks */
};

typedef struct mi_block_header_t mi_block_header;
typedef struct mi_magic_t mi_magic;
typedef struct mi_table_header_t mi_table_header;

extern mi_table_header *__inits;
int mi_initialize(void);

#endif /* _MEMINIT_H */
