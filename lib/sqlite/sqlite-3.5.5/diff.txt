? _FOSSIL_
? ci-comment-193CF3B1F386.txt
? ci-comment-1FDEF45C5CAE.txt
? ci-comment-3B10D8152269.txt
? ci-comment-8E988A598BF9.txt
? ci-comment-E56C076CA0F5.txt
? ci-comment-F51229116239.txt
? diff.out
? diff.txt
? manifest
? manifest.uuid
Index: src/build.c
===================================================================
RCS file: /sqlite/sqlite/src/build.c,v
retrieving revision 1.469
diff -u -r1.469 build.c
--- src/build.c	22 Jan 2008 01:48:06 -0000	1.469
+++ src/build.c	22 Jan 2008 14:48:48 -0000
@@ -22,7 +22,7 @@
 **     COMMIT
 **     ROLLBACK
 **
-** $Id: build.c,v 1.469 2008/01/22 01:48:06 drh Exp $
+** $Id: build.c,v 1.468 2008/01/21 16:22:46 drh Exp $
 */
 #include "sqliteInt.h"
 #include <ctype.h>
Index: src/main.c
===================================================================
RCS file: /sqlite/sqlite/src/main.c,v
retrieving revision 1.410
diff -u -r1.410 main.c
--- src/main.c	20 Jan 2008 23:19:57 -0000	1.410
+++ src/main.c	22 Jan 2008 14:48:49 -0000
@@ -1488,13 +1488,14 @@
     Btree *pBtree = db->aDb[iDb].pBt;
     if( pBtree ){
       Pager *pPager;
+      sqlite3_file *fd;
       sqlite3BtreeEnter(pBtree);
       pPager = sqlite3BtreePager(pBtree);
-      if( pPager ){
-        sqlite3_file *fd = sqlite3PagerFile(pPager);
-        if( fd ){
-          rc = sqlite3OsFileControl(fd, op, pArg);
-        }
+      assert( pPager!=0 );
+      fd = sqlite3PagerFile(pPager);
+      assert( fd!=0 );
+      if( fd->pMethods ){
+        rc = sqlite3OsFileControl(fd, op, pArg);
       }
       sqlite3BtreeLeave(pBtree);
     }
Index: src/parse.y
===================================================================
RCS file: /sqlite/sqlite/src/parse.y,v
retrieving revision 1.238
diff -u -r1.238 parse.y
--- src/parse.y	22 Jan 2008 01:48:06 -0000	1.238
+++ src/parse.y	22 Jan 2008 14:48:50 -0000
@@ -33,11 +33,8 @@
 //
 %syntax_error {
   if( !pParse->parseError ){
-    if( TOKEN.z[0] ){
-      sqlite3ErrorMsg(pParse, "near \"%T\": syntax error", &TOKEN);
-    }else{
-      sqlite3ErrorMsg(pParse, "incomplete SQL statement");
-    }
+    assert( TOKEN.z[0] );  /* The tokenizer always gives us a token */
+    sqlite3ErrorMsg(pParse, "near \"%T\": syntax error", &TOKEN);
     pParse->parseError = 1;
   }
 }
Index: src/test1.c
===================================================================
RCS file: /sqlite/sqlite/src/test1.c,v
retrieving revision 1.284
diff -u -r1.284 test1.c
--- src/test1.c	19 Jan 2008 23:50:26 -0000	1.284
+++ src/test1.c	22 Jan 2008 14:48:53 -0000
@@ -4304,6 +4304,39 @@
 }
 
 /*
+** tclcmd:   file_control_test DB
+**
+** This TCL command runs the sqlite3_file_control interface and
+** verifies correct operation of the same.
+*/
+static int file_control_test(
+  ClientData clientData, /* Pointer to sqlite3_enable_XXX function */
+  Tcl_Interp *interp,    /* The TCL interpreter that invoked this command */
+  int objc,              /* Number of arguments */
+  Tcl_Obj *CONST objv[]  /* Command arguments */
+){
+  int iArg = 0;
+  sqlite3 *db;
+  int rc;
+
+  if( objc!=2 ){
+    Tcl_AppendResult(interp, "wrong # args: should be \"",
+        Tcl_GetStringFromObj(objv[0], 0), " DB", 0);
+    return TCL_ERROR;
+  }
+  if( getDbPointer(interp, Tcl_GetString(objv[1]), &db) ) return TCL_ERROR;
+  rc = sqlite3_file_control(db, 0, 0, &iArg);
+  assert( rc==SQLITE_ERROR );
+  rc = sqlite3_file_control(db, "notadatabase", SQLITE_FCNTL_LOCKSTATE, &iArg);
+  assert( rc==SQLITE_ERROR );
+  rc = sqlite3_file_control(db, "main", -1, &iArg);
+  assert( rc==SQLITE_ERROR );
+  rc = sqlite3_file_control(db, "temp", -1, &iArg);
+  assert( rc==SQLITE_ERROR );
+  return TCL_OK;  
+}
+
+/*
 ** tclcmd:  save_prng_state
 */
 static int save_prng_state(
@@ -4484,6 +4517,7 @@
      { "sqlite3_global_recover",     test_global_recover, 0   },
      { "working_64bit_int",          working_64bit_int,   0   },
      { "vfs_unlink_test",            vfs_unlink_test,     0   },
+     { "file_control_test",          file_control_test,   0   },
 
      /* Functions from os.h */
 #ifndef SQLITE_OMIT_DISKIO
Index: src/util.c
===================================================================
RCS file: /sqlite/sqlite/src/util.c,v
retrieving revision 1.214
diff -u -r1.214 util.c
--- src/util.c	18 Jan 2008 14:08:25 -0000	1.214
+++ src/util.c	22 Jan 2008 14:48:53 -0000
@@ -444,25 +444,6 @@
 }
 
 /*
-** Check to make sure we have a valid db pointer.  This test is not
-** foolproof but it does provide some measure of protection against
-** misuse of the interface such as passing in db pointers that are
-** NULL or which have been previously closed.  If this routine returns
-** TRUE it means that the db pointer is invalid and should not be
-** dereferenced for any reason.  The calling function should invoke
-** SQLITE_MISUSE immediately.
-*/
-int sqlite3SafetyCheck(sqlite3 *db){
-  int magic;
-  if( db==0 ) return 1;
-  magic = db->magic;
-  if( magic!=SQLITE_MAGIC_CLOSED &&
-         magic!=SQLITE_MAGIC_OPEN &&
-         magic!=SQLITE_MAGIC_BUSY ) return 1;
-  return 0;
-}
-
-/*
 ** The variable-length integer encoding is as follows:
 **
 ** KEY:
@@ -705,3 +686,22 @@
     return 1;
   }
 }
+
+/*
+** Check to make sure we have a valid db pointer.  This test is not
+** foolproof but it does provide some measure of protection against
+** misuse of the interface such as passing in db pointers that are
+** NULL or which have been previously closed.  If this routine returns
+** TRUE it means that the db pointer is invalid and should not be
+** dereferenced for any reason.  The calling function should invoke
+** SQLITE_MISUSE immediately.
+*/
+int sqlite3SafetyCheck(sqlite3 *db){
+  int magic;
+  if( db==0 ) return 1;
+  magic = db->magic;
+  if( magic!=SQLITE_MAGIC_CLOSED &&
+         magic!=SQLITE_MAGIC_OPEN &&
+         magic!=SQLITE_MAGIC_BUSY ) return 1;
+  return 0;
+}
Index: tool/lempar.c
===================================================================
RCS file: /sqlite/sqlite/tool/lempar.c,v
retrieving revision 1.28
diff -u -r1.28 lempar.c
--- tool/lempar.c	22 Jan 2008 01:48:10 -0000	1.28
+++ tool/lempar.c	22 Jan 2008 14:48:54 -0000
@@ -680,13 +680,10 @@
   do{
     yyact = yy_find_shift_action(yypParser,yymajor);
     if( yyact<YYNSTATE ){
+      assert( !yyendofinput );  /* Impossible to shift the $ token */
       yy_shift(yypParser,yyact,yymajor,&yyminorunion);
       yypParser->yyerrcnt--;
-      if( yyendofinput && yypParser->yyidx>=0 ){
-        yymajor = 0;
-      }else{
-        yymajor = YYNOCODE;
-      }
+      yymajor = YYNOCODE;
     }else if( yyact < YYNSTATE + YYNRULE ){
       yy_reduce(yypParser,yyact-YYNSTATE);
     }else{
