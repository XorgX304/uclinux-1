--- /root/projects/git/kernel/linux-2.6-kgdb/drivers/serial/kgdboc.c	2008-09-12 13:34:10.000000000 +0800
+++ drivers/serial/kgdboc.c	2008-09-16 18:37:55.000000000 +0800
@@ -70,6 +70,9 @@
 
 	configured = 1;
 
+	kgdb_tty_driver->ops->kgdboc_port_startup(kgdb_tty_driver,
+					kgdb_tty_line);
+
 	return 0;
 
 noconfig:
@@ -90,8 +93,11 @@
 
 static void cleanup_kgdboc(void)
 {
-	if (configured == 1)
+	if (configured == 1) {
+		kgdb_tty_driver->ops->kgdboc_port_shutdown(kgdb_tty_driver,
+					kgdb_tty_line);
 		kgdb_unregister_io_module(&kgdboc_io_ops);
+	}
 }
 
 static int kgdboc_get_char(void)
Index: include/linux/tty_driver.h
===================================================================
--- include/linux/tty_driver.h	(revision 5191)
+++ include/linux/tty_driver.h	(working copy)
@@ -202,6 +202,11 @@
 	int (*tiocmget)(struct tty_struct *tty, struct file *file);
 	int (*tiocmset)(struct tty_struct *tty, struct file *file,
 			unsigned int set, unsigned int clear);
+#if defined(CONFIG_KGDB_SERIAL_CONSOLE) || \
+	defined(CONFIG_KGDB_SERIAL_CONSOLE_MODULE)
+	int (*kgdboc_port_startup)(struct tty_driver *driver, int line);
+	int (*kgdboc_port_shutdown)(struct tty_driver *driver, int line);
+#endif
 #ifdef CONFIG_CONSOLE_POLL
 	int (*poll_init)(struct tty_driver *driver, int line, char *options);
 	int (*poll_get_char)(struct tty_driver *driver, int line);
Index: include/linux/serial_core.h
===================================================================
--- include/linux/serial_core.h	(revision 5191)
+++ include/linux/serial_core.h	(working copy)
@@ -216,6 +216,15 @@
 	void		(*config_port)(struct uart_port *, int);
 	int		(*verify_port)(struct uart_port *, struct serial_struct *);
 	int		(*ioctl)(struct uart_port *, unsigned int, unsigned long);
+#if defined(CONFIG_KGDB_SERIAL_CONSOLE) || \
+	defined(CONFIG_KGDB_SERIAL_CONSOLE_MODULE)
+	/*
+	 * Start up serial port earlier in kgdboc to support gdb break
+	 * signal Ctrl+C.
+	 */
+	int		(*kgdboc_port_startup)(struct uart_port *);
+	void		(*kgdboc_port_shutdown)(struct uart_port *);
+#endif
 #ifdef CONFIG_CONSOLE_POLL
 	void	(*poll_put_char)(struct uart_port *, unsigned char);
 	int		(*poll_get_char)(struct uart_port *);
Index: drivers/serial/serial_core.c
===================================================================
--- drivers/serial/serial_core.c	(revision 5191)
+++ drivers/serial/serial_core.c	(working copy)
@@ -2245,6 +2245,39 @@
 	}
 }
 
+#if defined(CONFIG_KGDB_SERIAL_CONSOLE) || \
+	defined(CONFIG_KGDB_SERIAL_CONSOLE_MODULE)
+static int uart_kgdboc_port_startup(struct tty_driver *driver, int line)
+{
+	struct uart_driver *drv = driver->driver_state;
+	struct uart_state *state = drv->state + line;
+	struct uart_port *port;
+
+	if (!state || !state->port)
+		return -1;
+
+	port = state->port;
+	if (port->ops->kgdboc_port_startup)
+		return port->ops->kgdboc_port_startup(port);
+	else
+		return -1;
+}
+
+static void uart_kgdboc_port_shutdown(struct tty_driver *driver, int line)
+{
+	struct uart_driver *drv = driver->driver_state;
+	struct uart_state *state = drv->state + line;
+	struct uart_port *port;
+
+	if (!state || !state->port)
+		return;
+
+	port = state->port;
+	if (port->ops->kgdboc_port_shutdown)
+		port->ops->kgdboc_port_shutdown(port);
+}
+#endif
+
 #ifdef CONFIG_CONSOLE_POLL
 
 static int uart_poll_init(struct tty_driver *driver, int line, char *options)
@@ -2324,6 +2357,11 @@
 #endif
 	.tiocmget	= uart_tiocmget,
 	.tiocmset	= uart_tiocmset,
+#if defined(CONFIG_KGDB_SERIAL_CONSOLE) || \
+	defined(CONFIG_KGDB_SERIAL_CONSOLE_MODULE)
+	.kgdboc_port_startup	= uart_kgdboc_port_startup,
+	.kgdboc_port_shutdown	= uart_kgdboc_port_shutdown,
+#endif
 #ifdef CONFIG_CONSOLE_POLL
 	.poll_init	= uart_poll_init,
 	.poll_get_char	= uart_poll_get_char,
