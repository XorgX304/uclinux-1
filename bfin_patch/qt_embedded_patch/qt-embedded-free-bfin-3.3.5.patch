diff -urN qt-embedded-free-3.3.5/mkspecs/qws/linux-bfin-g++/qmake.conf qt-embedded-free-3.3.5.bfin/mkspecs/qws/linux-bfin-g++/qmake.conf
--- qt-embedded-free-3.3.5/mkspecs/qws/linux-bfin-g++/qmake.conf	1970-01-01 08:00:00.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/mkspecs/qws/linux-bfin-g++/qmake.conf	2006-02-22 10:32:39.000000000 +0800
@@ -0,0 +1,81 @@
+#
+# $Id$
+#
+# qmake configuration for linux-g++ using the bfin-uclinux-g++ crosscompiler
+#
+
+MAKEFILE_GENERATOR	= UNIX
+TEMPLATE		= app
+CONFIG			+= qt link_prl
+
+QMAKE_CC		= bfin-uclinux-gcc
+QMAKE_LEX		= flex
+QMAKE_LEXFLAGS		=
+QMAKE_YACC		= yacc
+QMAKE_YACCFLAGS		= -d
+QMAKE_CFLAGS		= -pipe -D__linux__ -DQT_NO_LIBRARY -DQT_NOMMU -DQ_NO_SEMAPHORE -DQT_QWS_NO_SHM -DQT_NO_QWS_MULTIPROCESS
+QMAKE_CFLAGS_WARN_ON	= -Wall -W
+QMAKE_CFLAGS_WARN_OFF	=
+QMAKE_CFLAGS_RELEASE	= -O2
+QMAKE_CFLAGS_DEBUG	= -g
+QMAKE_CFLAGS_SHLIB	=
+QMAKE_CFLAGS_YACC	= -Wno-unused -Wno-parentheses
+QMAKE_CFLAGS_THREAD	= -D_REENTRANT
+
+QMAKE_CXX		= bfin-uclinux-g++
+QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS -DQWS -fno-exceptions -fno-rtti
+QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
+QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
+QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD
+
+QMAKE_INCDIR		=
+QMAKE_LIBDIR		=
+QMAKE_INCDIR_X11	= 
+QMAKE_LIBDIR_X11	= 
+QMAKE_INCDIR_QT		= $(QTDIR)/include
+QMAKE_LIBDIR_QT		= $(QTDIR)/lib
+QMAKE_INCDIR_OPENGL	= /usr/X11R6/include
+QMAKE_LIBDIR_OPENGL	= /usr/X11R6/lib
+QMAKE_INCDIR_QTOPIA	= $(QPEDIR)/include
+QMAKE_LIBDIR_QTOPIA	= $(QPEDIR)/lib
+
+QMAKE_LINK		= bfin-uclinux-g++
+QMAKE_LINK_SHLIB	= bfin-uclinux-g++
+QMAKE_LFLAGS		= -Wl,-elf2flt
+QMAKE_LFLAGS_RELEASE	=
+QMAKE_LFLAGS_DEBUG	=
+QMAKE_LFLAGS_SHLIB      = -shared
+QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
+QMAKE_LFLAGS_SONAME     = -Wl,-soname,
+QMAKE_LFLAGS_THREAD     =
+QMAKE_RPATH             = -Wl,-rpath,
+
+QMAKE_LIBS		= 
+QMAKE_LIBS_DYNLOAD      =
+QMAKE_LIBS_X11		= 
+QMAKE_LIBS_X11SM	= 
+QMAKE_LIBS_QT		= -lqte
+QMAKE_LIBS_QT_THREAD    = -lqte-mt
+QMAKE_LIBS_QT_OPENGL	= -lqgl
+QMAKE_LIBS_QTOPIA	= -lqtopia -lqpe
+QMAKE_LIBS_THREAD       = -lpthread
+
+QMAKE_MOC		= $(QTDIR)/bin/moc
+QMAKE_UIC		= $(QTDIR)/bin/uic
+
+QMAKE_AR		= bfin-uclinux-ar cqs
+QMAKE_RANLIB		=
+
+QMAKE_TAR		= tar -cf
+QMAKE_GZIP		= gzip -9f
+
+QMAKE_COPY		= cp -f
+QMAKE_MOVE		= mv -f
+QMAKE_DEL_FILE		= rm -f
+QMAKE_DEL_DIR		= rmdir
+QMAKE_CHK_DIR_EXISTS	= test -d
+QMAKE_MKDIR		= mkdir -p
diff -urN qt-embedded-free-3.3.5/mkspecs/qws/linux-bfin-g++/qplatformdefs.h qt-embedded-free-3.3.5.bfin/mkspecs/qws/linux-bfin-g++/qplatformdefs.h
--- qt-embedded-free-3.3.5/mkspecs/qws/linux-bfin-g++/qplatformdefs.h	1970-01-01 08:00:00.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/mkspecs/qws/linux-bfin-g++/qplatformdefs.h	2006-02-21 14:05:05.000000000 +0800
@@ -0,0 +1,107 @@
+#ifndef QPLATFORMDEFS_H
+#define QPLATFORMDEFS_H
+
+// Get Qt defines/settings
+
+#include "qglobal.h"
+
+// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs
+
+// DNS system header files are a mess!
+// <resolv.h> includes <arpa/nameser.h>. <arpa/nameser.h> is using
+// 'u_char' and includes <sys/types.h>.  Now the problem is that
+// <sys/types.h> defines 'u_char' only if __USE_BSD is defined.
+// __USE_BSD is defined in <features.h> if _BSD_SOURCE is defined.
+#ifndef _BSD_SOURCE
+#  define _BSD_SOURCE
+#endif
+
+// 1) need to reset default environment if _BSD_SOURCE is defined
+// 2) need to specify POSIX thread interfaces explicitly in glibc 2.0
+// 3) it seems older glibc need this to include the X/Open stuff
+#ifndef _GNU_SOURCE
+#  define _GNU_SOURCE
+#endif
+
+#include <unistd.h>
+
+
+// We are hot - unistd.h should have turned on the specific APIs we requested
+
+
+#ifdef QT_THREAD_SUPPORT
+#include <pthread.h>
+#endif
+
+#include <dirent.h>
+#include <fcntl.h>
+#include <grp.h>
+#include <pwd.h>
+#include <signal.h>
+#include <dlfcn.h>
+
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/ipc.h>
+#include <sys/time.h>
+#include <sys/shm.h>
+#include <sys/socket.h>
+#include <sys/stat.h>
+#include <sys/wait.h>
+
+// DNS header files are not fully covered by X/Open specifications.
+// In particular nothing is said about res_* :/
+// Header files <netinet/in.h> and <arpa/nameser.h> are not included
+// by <resolv.h> on older versions of the GNU C library. Note that
+// <arpa/nameser.h> must be included before <resolv.h>.
+#include <netinet/in.h>
+#include <arpa/nameser.h>
+#include <resolv.h>
+
+#define QT_NO_LIBRARY
+
+#if !defined(QT_NO_COMPAT)
+#define QT_STATBUF		struct stat
+#define QT_STATBUF4TSTAT	struct stat
+#define QT_STAT			::stat
+#define QT_FSTAT		::fstat
+#define QT_STAT_REG		S_IFREG
+#define QT_STAT_DIR		S_IFDIR
+#define QT_STAT_MASK		S_IFMT
+#define QT_STAT_LNK		S_IFLNK
+#define QT_FILENO		fileno
+#define QT_OPEN			::open
+#define QT_CLOSE		::close
+#define QT_LSEEK		::lseek
+#define QT_READ			::read
+#define QT_WRITE		::write
+#define QT_ACCESS		::access
+#define QT_GETCWD		::getcwd
+#define QT_CHDIR		::chdir
+#define QT_MKDIR		::mkdir
+#define QT_RMDIR		::rmdir
+#define QT_OPEN_RDONLY		O_RDONLY
+#define QT_OPEN_WRONLY		O_WRONLY
+#define QT_OPEN_RDWR		O_RDWR
+#define QT_OPEN_CREAT		O_CREAT
+#define QT_OPEN_TRUNC		O_TRUNC
+#define QT_OPEN_APPEND		O_APPEND
+#endif
+
+#define QT_SIGNAL_RETTYPE	void
+#define QT_SIGNAL_ARGS		int
+#define QT_SIGNAL_IGNORE	SIG_IGN
+
+#if defined(__GLIBC__) && (__GLIBC__ >= 2)
+#define QT_SOCKLEN_T		socklen_t
+#else
+#define QT_SOCKLEN_T		int
+#endif
+
+#if defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE >= 500)
+#define QT_SNPRINTF		::snprintf
+#define QT_VSNPRINTF		::vsnprintf
+#endif
+
+
+#endif // QPLATFORMDEFS_H
diff -urN -x Makefile qt-embedded-free-3.3.5/src/3rdparty/zlib/configure qt-embedded-free-3.3.5.bfin/src/3rdparty/zlib/configure
--- qt-embedded-free-3.3.5/src/3rdparty/zlib/configure	2004-09-07 13:50:06.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/3rdparty/zlib/configure	2006-02-21 15:38:18.000000000 +0800
@@ -398,7 +398,7 @@
 #include <sys/mman.h>
 #include <sys/stat.h>
 caddr_t hello() {
-  return mmap((caddr_t)0, (off_t)0, PROT_READ, MAP_SHARED, 0, (off_t)0);
+  return mmap((caddr_t)0, (off_t)0, PROT_READ, MAP_PRIVATE, 0, (off_t)0);
 }
 EOF
 if test "`($CC -c $CFLAGS $test.c) 2>&1`" = ""; then
diff -urN -x Makefile qt-embedded-free-3.3.5/src/3rdparty/zlib/minigzip.c qt-embedded-free-3.3.5.bfin/src/3rdparty/zlib/minigzip.c
--- qt-embedded-free-3.3.5/src/3rdparty/zlib/minigzip.c	2005-09-02 20:43:08.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/3rdparty/zlib/minigzip.c	2006-02-21 15:38:39.000000000 +0800
@@ -147,7 +147,7 @@
     if (buf_len <= 0) return Z_ERRNO;
 
     /* Now do the actual mmap: */
-    buf = mmap((caddr_t) 0, buf_len, PROT_READ, MAP_SHARED, ifd, (off_t)0);
+    buf = mmap((caddr_t) 0, buf_len, PROT_READ, MAP_PRIVATE, ifd, (off_t)0);
     if (buf == (caddr_t)(-1)) return Z_ERRNO;
 
     /* Compress the whole file at once: */
diff -urN -x Makefile qt-embedded-free-3.3.5/src/embedded/qgfxlinuxfb_qws.cpp qt-embedded-free-3.3.5.bfin/src/embedded/qgfxlinuxfb_qws.cpp
--- qt-embedded-free-3.3.5/src/embedded/qgfxlinuxfb_qws.cpp	2005-09-02 20:42:56.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/embedded/qgfxlinuxfb_qws.cpp	2006-02-21 15:37:10.000000000 +0800
@@ -173,7 +173,7 @@
     mapsize=finfo.smem_len;
 
     data = (unsigned char *)mmap(0, mapsize, PROT_READ | PROT_WRITE,
-				 MAP_SHARED, fd, 0);
+				 MAP_PRIVATE, fd, 0);
     data += dataoffset;
 
     if ((int)data == -1) {
diff -urN -x Makefile qt-embedded-free-3.3.5/src/kernel/qlock.cpp qt-embedded-free-3.3.5.bfin/src/kernel/qlock.cpp
--- qt-embedded-free-3.3.5/src/kernel/qlock.cpp	2005-09-02 20:43:04.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/kernel/qlock.cpp	2006-02-21 18:00:03.000000000 +0800
@@ -57,6 +57,11 @@
 #include <sys/ipc.h>
 #include <string.h>
 #include <errno.h>
+#ifdef Q_NO_SEMAPHORE
+#include <sys/stat.h>
+#include <sys/file.h>
+#include <fcntl.h>
+#endif
 
 #define MAX_LOCKS   200	    // maximum simultaneous read locks
 
diff -urN -x Makefile qt-embedded-free-3.3.5/src/kernel/qprinter_unix.cpp qt-embedded-free-3.3.5.bfin/src/kernel/qprinter_unix.cpp
--- qt-embedded-free-3.3.5/src/kernel/qprinter_unix.cpp	2005-09-02 20:43:01.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/kernel/qprinter_unix.cpp	2006-02-21 15:55:05.000000000 +0800
@@ -364,11 +364,16 @@
 		pdrv = new QPSPrinter( this, fds[1] );
 		state = PST_ACTIVE;
 #else
+#ifdef QT_NOMMU
+		pid = vfork();
+#else
 		pid = fork();
+#endif
 		if ( pid == 0 ) {       // child process
 		    // if possible, exit quickly, so the actual lp/lpr
 		    // becomes a child of init, and ::waitpid() is
 		    // guaranteed not to wait.
+#ifndef QT_NOMMU
 		    if ( fork() > 0 ) {
 			closeAllOpenFds();
 
@@ -380,6 +385,7 @@
 			(void)execl("/usr/bin/true", "true", (char *)0);
 			::exit( 0 );
 		    }
+#endif
 		    dup2( fds[0], 0 );
 
  		    closeAllOpenFds();
diff -urN -x Makefile qt-embedded-free-3.3.5/src/kernel/qprocess_unix.cpp qt-embedded-free-3.3.5.bfin/src/kernel/qprocess_unix.cpp
--- qt-embedded-free-3.3.5/src/kernel/qprocess_unix.cpp	2005-09-02 20:43:01.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/kernel/qprocess_unix.cpp	2006-02-21 15:51:29.000000000 +0800
@@ -790,7 +790,11 @@
 
     // fork and exec
     QApplication::flushX();
+#ifdef QT_NOMMU
+    pid_t pid = vfork();
+#else
     pid_t pid = fork();
+#endif
     if ( pid == 0 ) {
 	// child
 	d->closeOpenSocketsForChild();
diff -urN -x Makefile qt-embedded-free-3.3.5/src/tools/qlocale.cpp qt-embedded-free-3.3.5.bfin/src/tools/qlocale.cpp
--- qt-embedded-free-3.3.5/src/tools/qlocale.cpp	2005-09-02 20:42:54.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/tools/qlocale.cpp	2006-02-21 16:12:01.000000000 +0800
@@ -56,8 +56,10 @@
 #endif
 
 #ifdef Q_OS_LINUX
+#ifndef QT_NOMMU
 #    include <fenv.h>
 #endif
+#endif
 
 #if !defined( QWS ) && defined( Q_OS_MAC )
 #   include <Carbon/Carbon.h>
@@ -5680,9 +5682,11 @@
 #endif
 
 #ifdef Q_OS_LINUX
+#ifndef QT_NOMMU
     fenv_t envp;
     feholdexcept(&envp);
 #endif
+#endif
 
     char *s = _qdtoa(d, mode, ndigits, decpt, sign, rve, resultp);
 
@@ -5698,8 +5702,10 @@
 #endif
 
 #ifdef Q_OS_LINUX
+#ifndef QT_NOMMU
     fesetenv(&envp);
 #endif
+#endif
 
     return s;
 }
--- qt-embedded-free-3.3.5/src/embedded/qmousepc_qws.cpp	2005-09-02 20:42:57.000000000 +0800
+++ qt-embedded-free-3.3.5.bfin/src/embedded/qmousepc_qws.cpp	2006-03-13 14:14:39.044121512 +0800
@@ -110,12 +110,16 @@
     UsageResult useData()
     {
 	int pbstate = bstate;
-	int n = tryData();
-	if ( n > 0 ) {
-	    if ( n<nbuf )
-		memmove( buffer, buffer+n, nbuf-n );
-	    nbuf -= n;
-	    return pbstate == bstate ? Motion : Button;
+	int n;
+
+	if( nbuf > 0 ) {
+		n = tryData();
+		if ( n > 0 ) {
+		    if ( n<nbuf )
+			memmove( buffer, buffer+n, nbuf-n );
+		    nbuf -= n;
+		    return pbstate == bstate ? Motion : Button;
+		}
 	}
 	return Insufficient;
     }
