--- strace-4.5.18/linux/ioctlent.sh
+++ strace-4.5.18/linux/ioctlent.sh
@@ -68,7 +68,19 @@
 lookup_ioctls 89 $asm/sockios.h linux/sockios.h
 lookup_ioctls 8B linux/wireless.h
 
-files="linux/* $asm/* scsi/* sound/*"
+if [ -e $dir/Kbuild ] ; then
+	# kernel has exported user space headers, so query only them
+	files=$(
+		cd $dir
+		find . -mindepth 2 -name Kbuild | \
+			sed -e 's:^\./::' -e 's:/Kbuild:/*:' | \
+			grep -v '^asm-'
+		echo "$asm/* asm-generic/*"
+	)
+else
+	# older kernel so just assume some headers
+	files="linux/* $asm/* scsi/* sound/*"
+fi
 
 # Build the list of all ioctls
 regexp='^[[:space:]]*#[[:space:]]*define[[:space:]]\+[A-Z][A-Z0-9_]*[[:space:]]\+_S\?\(IO\|IOW\|IOR\|IOWR\)\>'
@@ -78,12 +78,48 @@
 	>> ioctls.h
 
 # Some use a special base to offset their ioctls on. Extract that as well.
+# Some use 2 defines: _IOC(_IOC_NONE,DM_IOCTL,DM_LIST_DEVICES_CMD,....)
 : > ioctldefs.h
 
-bases=$(sed -ne 's/.*_IOC_NONE.*,[[:space:]]*\([A-Z][A-Z0-9_]\+\)[[:space:]+,].*/\1/p' ioctls.h | uniq | sort)
+bases=$(sed -n \
+	-e 's/.*_IOC_NONE.*,[[:space:]]*\([A-Z][A-Z0-9_]\+\)[[:space:]]*,[[:space:]]*\([A-Z][A-Z0-9_]\+\)[[:space:]+,].*/\1\n\2/p' \
+	-e 's/.*_IOC_NONE.*,[[:space:]]*\([A-Z][A-Z0-9_]\+\)[[:space:]+,].*/\1/p' \
+	ioctls.h | sort -u)
 for base in $bases ; do
-	echo "Looking for $base"
+	printf "Looking for $base"
 	regexp="^[[:space:]]*#[[:space:]]*define[[:space:]]\+$base"
 	(cd $dir ; grep -h $regexp 2>/dev/null $files ) | \
 		grep -v '\<_IO' >> ioctldefs.h
+
+	if ! grep -qs "\<$base\>" ioctldefs.h ; then
+		# DM_* stuff uses an enum
+		(
+		cd $dir
+		${CPP:-cpp} -E -dD -P $(grep -l $base $files 2>/dev/null) | \
+		awk -v base="$base" '{
+			if ($1 == "enum") {
+				val = 0
+				while ($NF != "};") {
+					if (!getline)
+						exit
+					gsub(/,/, "")
+					if ($0 ~ /=/)
+						val = $NF
+					if ($1 == base) {
+						print "#define " base " " val
+						exit
+					}
+					val++
+				}
+			}
+		}'
+		) >> ioctldefs.h
+		if ! grep -qs "\<$base\>" ioctldefs.h ; then
+			echo ": FAIL"
+		else
+			echo " (enum!)"
+		fi
+	else
+		echo
+	fi
 done
--- strace-4.5.18/linux/ioctlsort.c
+++ strace-4.5.18/linux/ioctlsort.c
@@ -35,9 +35,9 @@
 int main(int argc, char** argv) {
 	int i;
 
-#ifdef POWERPC			/* unspeakable kludge */
+#ifdef __powerpc__			/* unspeakable kludge */
 	for (i = 0; i < nioctls; i++)
-		ioctls[i].code &= ~_IOC_DIRMASK;
+		ioctls[i].code &= ~(1 << 29);
 #endif
 
 	qsort(ioctls, nioctls, sizeof(ioctls[0]), compare);
--- strace-4.5.18/syscallent.sh
+++ strace-4.5.18/syscallent.sh
@@ -59,6 +59,7 @@
 		print s
 	}
 	END {
+		exit
 		limit = call + 100
 		while (++call < limit) {
 			f = "printargs"
--- strace-4.5.18/Makefile.am
+++ strace-4.5.18/Makefile.am
@@ -7,7 +7,7 @@ bin_SCRIPTS = strace-graph
 # OS is one of `linux', `sunos4', `svr4', or `freebsd'.
 OS		= @opsys@
 # ARCH is `i386', `m68k', `sparc', etc.
-ARCH		= @arch@
+override ARCH		= @arch@
 
 AM_CFLAGS = $(WARNFLAGS)
 INCLUDES = -I$(OS)/$(ARCH) -I$(srcdir)/$(OS)/$(ARCH) -I$(OS) -I$(srcdir)/$(OS)
@@ -85,7 +85,7 @@ EXTRA_DIST = $(man_MANS) errnoent.sh signalent.sh syscallent.sh ioctlsort.c \
 if MAINTAINER_MODE
 if LINUX
 
-IOCTLDIR = /usr/include
+IOCTLDIR = $(includedir)
 IOCTLASM = asm
 
 if I386
@@ -99,7 +99,7 @@ BUILT_SOURCES = $(ioctlent_h)
 $(srcdir)/$(ioctlent_h): ioctlsort
 	$(<D)/$(<F) > $@
 ioctlsort: $(srcdir)/linux/ioctlsort.c ioctls.h ioctldefs.h
-	$(filter-out -I%,$(LINK.c)) -I. -I$(IOCTLDIR) $(filter -I%,$(LINK.c)) \
+	$(HOSTCC) -I. -I$(IOCTLDIR) $(filter -I%,$(LINK.c)) \
 	  -o $@ $<
 ioctls.h: $(srcdir)/linux/ioctlent.sh
 	$(SHELL) $< $(IOCTLDIR) $(IOCTLASM)
