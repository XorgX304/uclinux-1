comment '--###-- LINUX SYSTEM UTILITIES --###--'
 bool ' dmesg' CONFIG_USER_BUSYBOX_DMESG n
 if [ "$CONFIG_USER_BUSYBOX_DMESG" = "y" ]; then
   bool '   pretty dmesg output' CONFIG_USER_BUSYBOX_FEATURE_DMESG_PRETTY y
 fi
 bool ' fbset' CONFIG_USER_BUSYBOX_FBSET n
 if [ "$CONFIG_USER_BUSYBOX_FBSET" = "y" ]; then
   bool '   Turn on extra fbset options' CONFIG_USER_BUSYBOX_FEATURE_FBSET_FANCY n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FBSET" = "y" ]; then
   bool '   Turn on fbset readmode support' CONFIG_USER_BUSYBOX_FEATURE_FBSET_READMODE n
 fi
 bool ' fdflush' CONFIG_USER_BUSYBOX_FDFLUSH n
 bool ' fdformat' CONFIG_USER_BUSYBOX_FDFORMAT n
 bool ' fdisk' CONFIG_USER_BUSYBOX_FDISK n
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" ]; then
   bool '   support over 4GB disks' CONFIG_USER_BUSYBOX_FDISK_SUPPORT_LARGE_DISKS y
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" ]; then
   bool '   Write support' CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE y
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE" = "y" ]; then
   bool '   Support AIX disklabels' CONFIG_USER_BUSYBOX_FEATURE_AIX_LABEL n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE" = "y" ]; then
   bool '   Support SGI disklabels' CONFIG_USER_BUSYBOX_FEATURE_SGI_LABEL n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE" = "y" ]; then
   bool '   Support SUN disklabels' CONFIG_USER_BUSYBOX_FEATURE_SUN_LABEL n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE" = "y" ]; then
   bool '   Support BSD disklabels' CONFIG_USER_BUSYBOX_FEATURE_OSF_LABEL n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_FDISK_WRITABLE" = "y" ]; then
   bool '   Support expert mode' CONFIG_USER_BUSYBOX_FEATURE_FDISK_ADVANCED n
 fi
 bool ' freeramdisk' CONFIG_USER_BUSYBOX_FREERAMDISK n
 bool ' fsck_minix' CONFIG_USER_BUSYBOX_FSCK_MINIX n
 bool ' mkfs_minix' CONFIG_USER_BUSYBOX_MKFS_MINIX n
 if [ "$CONFIG_USER_BUSYBOX_FSCK_MINIX" = "y" -o "$CONFIG_USER_BUSYBOX_MKFS_MINIX" = "y" ]; then
   comment ' Minix filesystem support'
 fi
 if [ "$CONFIG_USER_BUSYBOX_FSCK_MINIX" = "y" -o "$CONFIG_USER_BUSYBOX_MKFS_MINIX" = "y" ]; then
   bool '   Support Minix fs v2 (fsck_minix/mkfs_minix)' CONFIG_USER_BUSYBOX_FEATURE_MINIX2 y
 fi
 bool ' getopt' CONFIG_USER_BUSYBOX_GETOPT n
 bool ' hexdump' CONFIG_USER_BUSYBOX_HEXDUMP n
 bool ' hwclock' CONFIG_USER_BUSYBOX_HWCLOCK n
 if [ "$CONFIG_USER_BUSYBOX_HWCLOCK" = "y" -a "$CONFIG_USER_BUSYBOX_GETOPT_LONG" = "y" ]; then
   bool '   Support long options (--hctosys,...)' CONFIG_USER_BUSYBOX_FEATURE_HWCLOCK_LONG_OPTIONS n
 fi
 if [ "$CONFIG_USER_BUSYBOX_HWCLOCK" = "y" ]; then
   bool '   Use FHS /var/lib/hwclock/adjtime' CONFIG_USER_BUSYBOX_FEATURE_HWCLOCK_ADJTIME_FHS y
 fi
 bool ' ipcrm' CONFIG_USER_BUSYBOX_IPCRM n
 if [ "$CONFIG_USER_BUSYBOX_IPCRM" = "y" ]; then
   if [ "$CONFIG_USER_BUSYBOX_FEATURE_SUID" != "y" ]; then
     define_bool CONFIG_USER_BUSYBOX_FEATURE_SUID y
   fi
 fi
 bool ' ipcs' CONFIG_USER_BUSYBOX_IPCS n
 if [ "$CONFIG_USER_BUSYBOX_IPCS" = "y" ]; then
   if [ "$CONFIG_USER_BUSYBOX_FEATURE_SUID" != "y" ]; then
     define_bool CONFIG_USER_BUSYBOX_FEATURE_SUID y
   fi
 fi
 bool ' losetup' CONFIG_USER_BUSYBOX_LOSETUP n
 bool ' mdev' CONFIG_USER_BUSYBOX_MDEV n
 if [ "$CONFIG_USER_BUSYBOX_MDEV" = "y" ]; then
   bool '   Support /etc/mdev.conf' CONFIG_USER_BUSYBOX_FEATURE_MDEV_CONF n
 fi
 if [ "$CONFIG_USER_BUSYBOX_FEATURE_MDEV_CONF" = "y" ]; then
   bool '   Support command execution at device addition/removal' CONFIG_USER_BUSYBOX_FEATURE_MDEV_EXEC n
 fi
 bool ' mkswap' CONFIG_USER_BUSYBOX_MKSWAP n
 if [ "$CONFIG_USER_BUSYBOX_MKSWAP" = "y" ]; then
   bool '   version 0 support' CONFIG_USER_BUSYBOX_FEATURE_MKSWAP_V0 n
 fi
 bool ' more' CONFIG_USER_BUSYBOX_MORE n
 if [ "$CONFIG_USER_BUSYBOX_MORE" = "y" ]; then
   bool '   Use termios to manipulate the screen' CONFIG_USER_BUSYBOX_FEATURE_USE_TERMIOS y
 fi
 bool ' mount' CONFIG_USER_BUSYBOX_MOUNT n
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" -a "$CONFIG_USER_BUSYBOX_FEATURE_HAVE_RPC" = "y" ]; then
   bool '   Support mounting NFS file systems' CONFIG_USER_BUSYBOX_FEATURE_MOUNT_NFS n
   if [ "$CONFIG_USER_BUSYBOX_FEATURE_MOUNT_NFS" = "y" ]; then
     if [ "$CONFIG_USER_BUSYBOX_FEATURE_SYSLOG" != "y" ]; then
       define_bool CONFIG_USER_BUSYBOX_FEATURE_SYSLOG y
     fi
   fi
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" ]; then
   bool '   Support mounting CIFS/SMB file systems' CONFIG_USER_BUSYBOX_FEATURE_MOUNT_CIFS n
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" ]; then
   bool '   Support lots of -o flags in mount' CONFIG_USER_BUSYBOX_FEATURE_MOUNT_FLAGS y
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" ]; then
   bool '   Support /etc/fstab and -a' CONFIG_USER_BUSYBOX_FEATURE_MOUNT_FSTAB y
 fi
 bool ' pivot_root' CONFIG_USER_BUSYBOX_PIVOT_ROOT n
 bool ' rdate' CONFIG_USER_BUSYBOX_RDATE n
 bool ' readprofile' CONFIG_USER_BUSYBOX_READPROFILE n
 bool ' setarch' CONFIG_USER_BUSYBOX_SETARCH n
 bool ' swaponoff' CONFIG_USER_BUSYBOX_SWAPONOFF n
 bool ' switch_root' CONFIG_USER_BUSYBOX_SWITCH_ROOT n
 bool ' umount' CONFIG_USER_BUSYBOX_UMOUNT n
 if [ "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
   bool '   umount -a option' CONFIG_USER_BUSYBOX_FEATURE_UMOUNT_ALL n
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" -o "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
   comment ' Common options for mount/umount'
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" -o "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
   bool '   Support loopback mounts' CONFIG_USER_BUSYBOX_FEATURE_MOUNT_LOOP n
 fi
 if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" -o "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
   bool '   Support for the old /etc/mtab file' CONFIG_USER_BUSYBOX_FEATURE_MTAB_SUPPORT n
 fi
