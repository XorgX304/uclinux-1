#!/usr/bin/expect

source  ../kernel_config.exp

log_file [log_file_name "$argv0"]

send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

sleep 5

step "Start DLL testing"

set case_num 0
set timeout 2

incr case_num
step "Clean src directory\n"
spawn make clean -C src
while 1 {
   expect {

      "*error*" {
         case_fail $case_num
      }

      eof {
         send_log "\nClean src/.\n"
         send_user "\nClean src/. \n"
         break
      }

      timeout {
         break
      }
   }
}

step "Build test program\n"
spawn make -C src
while 1 {
   expect {

      "*error*" {
         case_fail $case_num
      }

      eof {
         send_log "\nBuild test program done\n"
         send_user "\nBuild test program done\n"
         break
      }

      timeout {
         break
      }
   }
}

set spawn_id $kermit_spawn_id

send "ifconfig eth0 $targetip up\r"
sleep 15

set timeout 100
step "Copy testcase to target board\n"
spawn rcp src/libhelloworld.so root@$targetip:/lib/.
while 1 {
   expect {

      "*connect*" {
         case_fail $case_num
      }

      eof {
         send_log "\nCopy libhelloworld.so to target board done\n"
         send_user "\nCopy libhelloworld.so to target board done\n"
         break
      }

      timeout {
         break
      }
   }
}

spawn rcp src/test_dll root@$targetip:/.
while 1 {
   expect {

      "*connect*" {
         case_fail $case_num
      }

      eof {
         send_log "\nCopy test_dll to target board done\n"
         send_user "\nCopy test_dll to target board done\n"
         break
      }

      timeout {
         break
      }
   }
}

set spawn_id $kermit_spawn_id
set timeout 2
set testres    0
send "./test_dll\r"
while 1 {
   expect {

      "hello" {
         send_log "\nTest get hello\n"
         send_user "\nTest get hello\n"
         incr testres
         if { $testres == 2 } {
            case_pass $case_num
            break
         }
      }

      "get 2" {
         send_log "\nTest get correct return value\n"
         send_user "\nTest get correct return value\n"
         incr testres
         if { $testres == 2 } {
            case_pass $case_num
            break
         }
      }
      timeout {
         send_user "\ntest timeout\n"
         break
      }
   }
}

if { $testres != 2 } {
   all_pass
} else {
   case_fail $case_num
}

send_user "Ending $argv0\n"

log_file
