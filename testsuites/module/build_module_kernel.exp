#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
          -re  "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
                send "$expect_out(1,string)\r"
          }
   
           -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" { 
             
             send "y\r"
      }

           -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {   
             
             send "y\r"
      }
      
     
         -re "Enable loadable module support.*MODULES.*\\\[.*]" {
             
             send -s "Y\r"
      }
      
        -re "Module unloading.*MODULE_UNLOAD.*\\\[.*]" {
             
             send -s "Y\r"
      }
      
        -re "Automatic kernel module loading.*KMOD.*\\\[.*]" {
             
             send -s "Y\r"
      }
      
        -re "Ethernet .*10 or 100Mbit.*NET_ETHERNET.*\\\[.*]" {
             send -s "Y\r"
             
      }
         
 	-re "SMC 91C9x/91C1xxx support.*SMC91X.*\\\[.*]" {
	
	 if { $board_type == "BF533-STAMP" } {
             		send -s "M\r"
             		
             } else {
                        send -s "\r"
             }             
      }
        -re "Blackfin .*536.537 on-chip mac support.*BFIN_MAC.*\\\[.*]" {
             
	      if { $board_type == "BF537-STAMP" } {
                        
             		send -s "M\r"
             		
             } else {
                        send -s "\r"
             }    
	    
      }

       "\\\(*) \\\[*]" {
             sleep .001 
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }


      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
                     
      }
   }
}


cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
 

