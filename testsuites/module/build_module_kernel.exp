#!/usr/bin/expect
log_file build_module_kernel_log
send_user "Starting build_module_kernel.exp\n"

set user /home/test
set uclinux_path $user/checkouts/kernel/uClinux-dist
set dxe_filename linux
set ttydev /dev/ttyS0
set send_slow {1 0.1}
set password "blackfin"

set board_type [lindex $argv 0]
send_log "\n#### board_type is $board_type\n"

if { $argc < 1} {
puts "Please input: board_type."
exit
}

if { $argc >= 2} {
   set uclinux_path       [lindex $argv 1]
   send_log "\n#### uclinux_path is $uclinux_path\n"
}


proc step { message } {

  global step_sequence_number

  puts "\n*******************************************************************"
  puts "STEP $step_sequence_number: $message\n\n"
  send_log "\n************** STEP $step_sequence_number: $message\n\n"
  incr step_sequence_number
}

set step_sequence_number    1

step "Make config."

cd $uclinux_path
set timeout 300
spawn make config


while 1 {
   expect {

       -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {

             send "$board_type\r"
      }

      "\\\(*) \\\[*]" {
             send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
             puts "End of configuration"
             break
      }
      timeout {
             puts "\n\nFATAL ERROR: config prompt timeout in make config"


      }
   }
}


cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	        
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             
             send "y\r"
      }
      
     
         -re "Enable loadable module support.*MODULES.*\\\[.*]" {
             
             send "Y\r"
      }
      
        -re "Module unloading.*MODULE_UNLOAD.*\\\[.*]" {
             
             send "Y\r"
      }
      
        -re "Automatic kernel module loading.*KMOD.*\\\[.*]" {
             
             send "Y\r"
      }
      
        -re "Ethernet .*10 or 100Mbit.*NET_ETHERNET.*\\\[.*]" {
             send "Y\r"
             
      }
         
 	-re "SMC 91C9x/91C1xxx support.*SMC91X.*\\\[.*]" {
	
	 if { $board_type == "BF533-STAMP" } {
             		send "M\r"
             		
             } else {
                        send "\r"
             }             
      }
        -re "Blackfin 536.537 on-chip mac support.*BFIN_MAC.*\\\[.*]" {
             
	      if { $board_type == "BF537-STAMP" } {
                        
             		send "M\r"
             		
             } else {
                        send "\r"
             }    
	    
      }

       "\\\(*) \\\[*]" {
             
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }


      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
                     
      }
   }
}


step "Make"

cd $uclinux_path
spawn make
set timeout 1200
set bfin_make_status failure
while 1 {
      expect {
	     "Entering directory" { }
	     "Leaving directory" { set bfin_make_status success }
	     "Error" {set bfin_make_status failure }
	     "/bin/sh" { }
	     eof { break }
      }
}

if { $bfin_make_status == "failure" } {
      puts "ERROR: Error somewhere during make"

}    

step "Copy linux"
  
set timeout 8
cd $uclinux_path
exec cp images/linux  /tftpboot


log_file
 
send_user "Ending build_module_kernel.exp\n"

