#!/bin/sh

#
# Variables need to be modified before test execution for specific test configuration.
# Be noted that those variables should be align with variables in kernel_test script.
#
USER=/home/test
CHECKOUT=$USER/checkouts
KERNEL_SCRIPTS=$USER/test_scripts/kernel
CVS_SERVER=10.99.22.20
CVS_ROOT=/cvsroot

BOARD_CONFIG=BF533-EZKIT-STD
CPU=BF533
REVISION=0.2
KERNEL_PATH=$USER/checkouts/kernel
BINARY_FORMAT=flat
ALLOCATOR=slab\(p2\)
ICACHE=on
DCACHE=off
POLICY=write_through
UART_MODE=dma
LOG_DIR="$USER/test_scripts/kernel/logs/all_""$BOARD_CONFIG""(""$REVISION"")""_""$BINARY_FORMAT""_""$ALLOCATOR""_icache(""$ICACHE"")_""dcache(""$DCACHE"",""$POLICY"")_UART(""$UART_MODE"")"

# End of variables list


KERNEL_PATH_BAK="$KERNEL_PATH""_bak"

if [ -e $USER/test_scripts/test_result ] ; then
 rm $USER/test_scripts/test_result
fi

if [ -e $USER/test_scripts/laststatus ] ; then
 rm $USER/test_scripts/laststatus
fi
 cp $LOG_DIR/laststatus $USER/test_scripts/laststatus

if [ ! -d $CHECKOUT/kernel_bak ] ; then
  mkdir -p $CHECKOUT/kernel_bak
fi

  ## build and run the tests
  TIMESTAMP=`date +%Y_%b_%d_%H_%M`
  THIS_LOG=$LOG_DIR/$TIMESTAMP
  mkdir -p $THIS_LOG

  echo "########## CHECK OUT KERNEL SOURCE  ############"

  echo -n "Removing checkouts   " ; date
  rm -rf $CHECKOUT/kernel_bak/*
  cd $CHECKOUT/kernel_bak
  echo -n "Checking out kernel     " ; date
  #cvs -d :pserver:anonymous@$CVS_SERVER:$CVS_ROOT/uclinux533 checkout -P uClinux-dist  1>/dev/null 2>/dev/null
  svn -q co svn://10.99.22.20/uclinux-dist/trunk uclinux-dist

  cp  $KERNEL_PATH_BAK/uclinux-dist/testsuites/kernel_test $KERNEL_SCRIPTS

  cd $KERNEL_SCRIPTS
  #./kernel_test  $BOARD_CONFIG $CPU $REVISION $KERNEL_PATH  $BINARY_FORMAT $ALLOCATOR $ICACHE $DCACHE $POLICY $UART_MODE $THIS_LOG
  ./kernel_test BF533-EZKIT-STD BF533 0.3 /home/test/checkouts/kernel flat slab\(p2\) on on write_through dma $THIS_LOG

  cp $KERNEL_SCRIPTS/kernel_test_log $THIS_LOG

  echo " ######### DECIDE TEST RESULT #################"

  cd $KERNEL_SCRIPTS
  if $KERNEL_SCRIPTS/decide_all_standard $THIS_LOG ; then
  echo  "success" > $USER/test_scripts/test_result
  else
  echo  "test_failed" > $USER/test_scripts/test_result
  fi

  cp $USER/test_scripts/test_result $LOG_DIR/laststatus

  echo
  echo  "The test_result of this testing:     "
  echo
  cat $USER/test_scripts/test_result


