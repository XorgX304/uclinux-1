#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

step "Change config file in /vender folder."

cd $uclinux_path
sleep 3
set timeout 2
      spawn ex vendors/AnalogDevices/$board_type/Makefile
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/EXT2_BLOCKS\r"
      expect "EXT2_BLOCKS*="
      send "d\r"
      expect ":"
      send "i\r"
      sleep .5
      send "EXT2_BLOCKS = 16384\r"
      sleep .5
      send ".\r"
      expect ":"
      send "wq\r"
      expect eof


cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re  "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Re-program Clocks while Kernel boots.*BFIN_KERNEL_CLOCK.*\\\[.*]" {
            send "Y\r"
        }

        -re "VCO Multiplier.*VCO_MULT.*\\\[.*]" {
            send "20\r"
        }

        -re "Core Clock Divider.*CCLK_DIV.*\\\[.*]" {
            send "1\r"
        }

        -re "System Clock Divider.*SCLK_DIV.*\\\[.*]" {
            send "8\r"
        }

        -re "ATA.ATAPI.MFM.RLL support.*IDE.*\\\[.*]" {
            send "Y\r"
        }

        -re "Enhanced IDE.MFM.RLL disk.cdrom.tape.floppy support.*BLK_DEV_IDE.*\\\[.*]" {
            send "Y\r"
        }

        -re "Include IDE.ATA-2 DISK support.*BLK_DEV_IDEDISK.*\\\[.*]" {
            send "Y\r"
        }

        -re "IDE Interface Address Mapping .*16-bit mapping for multimode CF Interface.*BFIN_IDE_ADDRESS_MAPPING_MODE1.*choice.*\\\[.*]" {
            send "2\r"
        }

        -re "IDE register base address.*BFIN_IDE_BASE.*\\\[.*]" {
            send "0x2031C020\r"
        }

        -re "IDE register alternate address.*BFIN_IDE_ALT.*\\\[.*]" {
            send "0x2031C01C\r"
        }

        -re "IDE IRQ no.*BFIN_IDE_IRQ.*\\\[.*]" {
            send "34\r"
        }

        -re "IDE IRQ PFx no.*BFIN_IDE_IRQ_PFX.*\\\[.*]" {
            send "4\r"
        }

        -re "Blackfin A.* used as CF A0.*BFIN_IDE_ADDRESS_AX.*\\\[.*]" {
            send "13\r"
        }

        -re "Address for enabling CF TRUE IDE MODE.*ATASEL.*CF_ATASEL_ENA.*\\\[.*]" {
            send "0x20311802\r"
        }

        -re "Address for disabling CF TRUE IDE MODE.*ATASEL.*CF_ATASEL_DIS.*\\\[.*]" {
            send "0x20311800\r"
        }

        -re "Bank 3.*\\\(BANK_3\\\).*\\\[.*]" {
            send -s "0xFFC3\r"
        }

        -re "Second extended fs support.*EXT2_FS.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "MSDOS fs support.*MSDOS_FS.*\\\[.*]" {
            send "Y\r"
        }

        -re "VFAT.*Windows-95.*fs support.*VFAT_FS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Default NLS Option.*NLS_DEFAULT.*\\\[.*]" {
            send "\r"
        }

        -re "Codepage 437.*United States.*Canada.*NLS_CODEPAGE_437.*\\\[.*]" {
            send "Y\r"
        }

        -re "Codepage 850.*Europe.*NLS_CODEPAGE_850.*\\\[.*]" {
            send "Y\r"
        }

        -re "NLS ISO 8859-1.*Latin 1.*Western European Languages.*NLS_ISO8859_1.*\\\[.*]" {
            send "Y\r"
        }

        -re "fdisk.*USER_FDISK_FDISK.*\\\[.*]" {
            send "Y\r"
        }

        -re "mke2fs.*USER_E2FSPROGS_MISC_MKE2FS.*\\\[.*]" {
            send "Y\r"
        }

        -re "hdparm.*USER_BUSYBOX_HDPARM.*\\\[.*]" {
             send "Y\r"
      }

       -re "Support obtaining detailed information directly from drives.*USER_BUSYBOX_FEATURE_HDPARM_GET_IDENTITY.*\\\[.*]" {
             send "Y\r"
      }

       -re "Register an IDE interface.*USER_BUSYBOX_FEATURE_HDPARM_HDIO_SCAN_HWIF.*\\\[.*]" {
             send "Y\r"
      }

       -re "Un-register an IDE interface.*USER_BUSYBOX_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF.*\\\[.*]" {
             send "Y\r"
      }

       -re "perform device reset.*USER_BUSYBOX_FEATURE_HDPARM_HDIO_DRIVE_RESET.*\\\[.*]" {
             send "Y\r"
      }

       -re "tristate device for hotswap.*USER_BUSYBOX_FEATURE_HDPARM_HDIO_TRISTATE_HWIF.*\\\[.*]" {
             send "Y\r"
      }

       -re "get/set using_dma flag.*USER_BUSYBOX_FEATURE_HDPARM_HDIO_GETSET_DMA.*\\\[.*]" {
             send "Y\r"
      }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp
 
send_user "Ending $argv0\n"
log_file
