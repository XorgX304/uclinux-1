#!/usr/bin/expect

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

step "Starting test."

set case_num 0

incr case_num

set timeout 8
set flag 0
send "ifconfig eth0 $targetip\r"
while 1 {
   sleep 3
   expect {
      ">" {
         set flag 1
         puts "ifconfig set success.\n"
         break
      }

      timeout {
            puts "Fail ifconfig. "
            break
         }
     }
}

send "cd /bin\r"
while 1 {
   expect {
      "bin" {
         set flag 1
         break
      }

      timeout {

            break
         }
     }
}

set timeout 500
expect "root:/bin>"

send -s  "./fs_test.sh\r" 
while 1 {
   expect {
      "Execution completed" {
         send_log "\nCase $case_num ...PASS\n"        
         break
      }

      timeout {
        send_log "\nCase $case_num ...FAIL\n"
	send_log "$TITLE ............\[FAIL\]\n"
	exit
        }
     }
}

incr case_num

send -s "ls -l TestFailed.log\r"
set timeout 10
while 1 {
   expect {
      -re "rw.* .* .* .* (\[0-9]+) .*TestFailed\.log" {
         set FileSize $expect_out(1,string)
         expect ">"
         puts " FileSize $expect_out(1,string)"	 
         break
      }

      timeout {
        break       
         }
     }
}

 if { $FileSize == 0 } {

                send_log "\nCase $case_num ...PASS\n"

 } else {
                send_log "\nCase $case_num ...FAIL\n"
                send_log "$TITLE ............\[FAIL\]\n"
                exit
 }

spawn ftp $targetip
while 1 {
    expect {
                "Name" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
        send -s "root\r"
        expect {
                "Password:" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
        send -s "uClinux\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }

	send -s "cd bin\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	
        send -s "get TestOverall.log\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }

        send -s "get TestResults.log\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }

         send -s "bye\r"
         expect {
                "Goodbye" { break }
                timeout { send_user "Failed first return\n"
                        break }
         }

   }

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file



