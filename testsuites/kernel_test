#!/bin/sh
########################################################################################################################
######### To run this script, please first set following uboot varibles properly on your target board  #################
######### set  bootargs  bootfile linux                                                                #################
######### set  bootargs  loadaddr 2000000                                                     	       #################
######### set  bootcmd   run tftpboot                                                                  #################
######### set  tftpboot  'tftp 0x2000000 linux;bootelf'                                                #################
######### set  ipaddr    10.100.4.50  (set your board ip here)                                         #################
######### set  serverip  10.100.4.174 (set your server ip here)                                        #################
########################################################################################################################

############### Set up the testing environment. Edit the following variables to suit your situation. ###################

USER=/home/test
CHECKOUT=$USER/checkouts
KERNEL_PATH=$CHECKOUT/kernel
KERNEL_PATH_BAK=$CHECKOUT/kernel_bak
KERNEL_SOURCE=$KERNEL_PATH/uClinux-dist
KERNEL_SOURCE_BAK=$KERNEL_PATH_BAK/uClinux-dist
KERNEL_SCRIPTS=$KERNEL_SOURCE/testsuites
BASELINE=standard
BOARD_CONFIG=$1

########################################### Please don't edit anything below this line.###################################

if [ $# -lt 5 ] ; then
  echo "Please input BOARD_CONFIG [KERNEL_SOURCE BINARY_FORMAT POLICY VCO_MULT CCLK_DIV SCLK_DIV] values: "
  echo "The BOARD_CONFIG should be BF533-STAMP-STD, BF537-STAMP-STD, BF537-STAMP-IDE,etc."
  echo "For example:./kernel_test BF537-STAMP-STD /home/test/checkouts/kernel/uClinux-dist flat write_through /home/test/test_scripts/kernel/logs/all_flat_write_through/THIS_LOG."
  exit
fi

if [ $# -gt 1 ] ; then
  KERNEL_SOURCE=$2
  echo "##### KERNEL_SOURCE is $2"
 fi
 
if [ $# -gt 2 ] ; then
  BINARY_FORMAT=$3  
  echo "##### BINARY_FORMAT is $3"
 fi
 
 if [ $# -gt 3 ] ; then
  POLICY=$4  
  echo "##### POLICY is $4"
 fi
 
 if [ $# -gt 4 ] ; then
  THIS_LOG=$5
  echo "##### THIS_LOG is $5"
 fi
 
if [ $# -gt 5 ] ; then
  VCO_MULT=$6
  CCLK_DIV=$7
  SCLK_DIV=$8
fi


###### See if kernel has been checked out.##################################################
 
if [ ! -d $KERNEL_PATH_BAK ] ; then
  echo  "##### No kernel source in $KERNEL_PATH_BAK."
  exit
fi
if [ ! -d $KERNEL_PATH ] ; then
  mkdir -p $KERNEL_PATH
  echo  "##### Testing is doing against the kernel source in $KERNEL_PATH."
fi

if [ ! -d $THIS_LOG ] ; then
  mkdir -p $THIS_LOG  
else 
  rm -rf $THIS_LOG/*  
fi
  echo  "##### Test results are in $THIS_LOG."

# KERNEL_SCRIPTS/change_clk.exp $BOARD_TYPE $VCO_MULT $CCLK_DIV $SCLK_DIV

######## Set the default value for the test cases
          reset_board=0 # set this value to 1 if your target board could be restarted from host machine parallel port.
	  
         build_policy=0
	ethernet_test=0
	  stress_test=0
	  serial_test=0
	  reboot_test=0	     
	  module_test=0
	    kgdb_test=0
	     rtc_test=0
	     nfs_test=0
	 pnormtd_test=0
    jffs2_reboot_test=0 
	jffs2_fs_test=0
	  strace_test=0
	     msh_test=0
	 pthread_test=0
	     dpm_test=0
	   timer_test=0
	   pound_test=0
	  spiadc_test=0
	   audio_test=0
	   pflag_test=0
	    dpmc_test=0
	  i2ctwi_test=0
        joystick_test=0
         snormtd_test=0
	 cf_card_test=0
	     ide_test=0
wireless_network_test=0
	   yaffs_test=0
	  ppifcd_test=0
	   coreb_test=0

     
#######  BOARD CONFIG DEFINITION      ###################################################### 

if [ $BOARD_CONFIG = "BF537-STAMP-STD" ] ; then
 
   echo  "##### Testing is doing with the config $BOARD_CONFIG."
   
   BOARD_TYPE=BF537-STAMP
   
         build_policy=1
	ethernet_test=1
	  stress_test=1
	  serial_test=1
	  reboot_test=1	     
	  module_test=1
	    kgdb_test=1
	     rtc_test=1
	     nfs_test=1
	 pnormtd_test=1
    jffs2_reboot_test=1 
	jffs2_fs_test=1
	  strace_test=1
	     msh_test=1
	 pthread_test=1
	     dpm_test=1
	   timer_test=1
	   pound_test=0
	  spiadc_test=1
	   audio_test=0
	   pflag_test=0
	    dpmc_test=1
	  i2ctwi_test=1
        joystick_test=1
         snormtd_test=0
	 cf_card_test=1
	     ide_test=0
wireless_network_test=0
	   yaffs_test=0
	  ppifcd_test=0
	   coreb_test=0
fi

if [ $BOARD_CONFIG = "BF533-STAMP-STD" ] ; then
 
   echo  "##### Testing is doing with the config $BOARD_CONFIG."
   
   BOARD_TYPE=BF533-STAMP
   
         build_policy=1
	ethernet_test=1
	  stress_test=1
	  serial_test=1
	  reboot_test=1	     
	  module_test=1
	    kgdb_test=1
	     rtc_test=1
	     nfs_test=1
	 pnormtd_test=1
    jffs2_reboot_test=1 
	jffs2_fs_test=0
	  strace_test=1
	     msh_test=1
	 pthread_test=1
	     dpm_test=1
	   timer_test=1
	   pound_test=1
	  spiadc_test=1
	   audio_test=1
	   pflag_test=1
	    dpmc_test=1
	  i2ctwi_test=1
        joystick_test=0
         snormtd_test=1
	 cf_card_test=0
	     ide_test=0
wireless_network_test=0
	   yaffs_test=0
	  ppifcd_test=1
	   coreb_test=0
         	
fi
 
if [ $BOARD_CONFIG = "BF561-EZKIT-STD" ] ; then
 
   echo  "##### Testing is doing with the config $BOARD_CONFIG."
   
   BOARD_TYPE=BF561-EZKIT
   
         build_policy=0
	ethernet_test=0
	  stress_test=0
	  serial_test=0
	  reboot_test=0	     
	  module_test=0
	    kgdb_test=0
	     rtc_test=0
	     nfs_test=0
	 pnormtd_test=0
    jffs2_reboot_test=0 
	jffs2_fs_test=0
	  strace_test=0
	     msh_test=0
	 pthread_test=0
	     dpm_test=0
	   timer_test=0
	   pound_test=0
	  spiadc_test=0
	   audio_test=0
	   pflag_test=0
	    dpmc_test=0
	  i2ctwi_test=0
        joystick_test=0
         snormtd_test=0
	 cf_card_test=0
	     ide_test=0
wireless_network_test=0
	   yaffs_test=0
	  ppifcd_test=0
	   coreb_test=1
         	
fi
 


####### Build and run the tests      #######################################################

export PATH=/opt/uClinux/bfin-uclinux/bin:/opt/uClinux/bfin-elf/bin:$PATH

cd  $KERNEL_SOURCE_BAK/testsuites
chmod +x */*.exp

  #############################################################################################
  ########################## BUILD POLICY KERNEL ##############################################
  
  if [ $build_policy -eq 1  ] ; then
  echo  "Running build policy kernel... "
  
  rm -rf $KERNEL_PATH
  echo  "mv kernel source "
  mv $KERNEL_PATH_BAK $KERNEL_PATH
     
  echo  "start building policy kernel..."
  cd $KERNEL_SCRIPTS/policy
  ./build_policy_kernel.exp  $BOARD_TYPE $KERNEL_SOURCE $BINARY_FORMAT $POLICY  1>/dev/null 2>/dev/null

  cp $KERNEL_SCRIPTS/policy/build_policy_kernel_log  $THIS_LOG

  if [ ! -f $KERNEL_SOURCE/images/linux ] ; then
  echo  "Linux image fails to be generated.Error!"
  exit
  fi
    
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.policy
  
  sleep 30
  
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
  
  echo  "mv kernel source back."
  mv $KERNEL_PATH $KERNEL_PATH_BAK 
  mkdir -p $KERNEL_PATH
  
  sleep 10

  fi
  #############################################################################################
  ########################## TEST ETHERNET ####################################################

  if [ $ethernet_test -eq 1  ] ; then
  echo  "Testing ethernet..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel   
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/ethernet
  ./build_ethernet_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./ethernet_test.exp  $BOARD_TYPE  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ethernet
  cp $KERNEL_SCRIPTS/ethernet/build_ethernet_kernel_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/ethernet/ethernet_test_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/ethernet/netperf_tcp_rr $THIS_LOG/
  cp $KERNEL_SCRIPTS/ethernet/netperf_tcp_stream $THIS_LOG/

  sleep 30
  
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
 
  fi
 
  
  #############################################################################################
  ########################## TEST STRESS ######################################################
  
  if [ $stress_test -eq 1  ] ; then
  echo  "Testing stress ..."
 
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/stress
  ./build_stress_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./stress_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.stress
  cp $KERNEL_SCRIPTS/stress/build_stress_kernel_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/stress/stress_test_log $THIS_LOG 
  cp $KERNEL_SCRIPTS/stress/ftp_test_log $THIS_LOG
   cp $KERNEL_SCRIPTS/stress/telnet_test_log $THIS_LOG
   
  sleep 30
    
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  
  #############################################################################################
  ########################## TEST SERIAL ####################################################
  
  if [ $serial_test -eq 1  ] ; then
  echo  "Testing serial..."
       
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd  $KERNEL_SCRIPTS/serial
  ./build_serial_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./serial_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.serial
  cp $KERNEL_SCRIPTS/serial/build_serial_kernel_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/serial/serial_test_log $THIS_LOG/
  
  sleep 30
  
  
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
    
  fi
  
  #############################################################################################
  ########################## TEST REBOOT ON RAMDISK ###########################################
  
  if [ $reboot_test -eq 1  ] ; then
  
  echo  "Testing reboot on RAMDISK..."
   
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd  $KERNEL_SCRIPTS/ramfs
  ./build_ramfs_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./reboot_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.reboot
  cp $KERNEL_SCRIPTS/ramfs/build_ramfs_kernel_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/ramfs/reboot_test_log $THIS_LOG  
  
  sleep 300
   
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
  
  fi
  
  #############################################################################################
  ########################## TEST KGDB #########################################################
  
   if [ $kgdb_test -eq 1  ] ; then
  
  echo  "Testing kgdb..."
 
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  
  cd $KERNEL_SCRIPTS/kgdb
  ./build_kgdb_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./kgdb_test.exp /dev/ttyS0 $KERNEL_SOURCE 10.100.4.50   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.kgdb
  cp $KERNEL_SCRIPTS/kgdb/build_kgdb_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/kgdb/kgdb_test_log $THIS_LOG
  
  sleep 30
    
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  #############################################################################################
  ########################## TEST MODULE #######################################################
   
   if [ $module_test -eq 1  ] ; then
   
  echo  "Testing module..."
   
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/module
  ./build_module_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./module_test.exp $BOARD_TYPE   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.module
  cp $KERNEL_SCRIPTS/module/build_module_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/module/module_test_log $THIS_LOG  
  
  sleep 30
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  
  
  ########################## TEST RTC #########################################################
  
 if [ $rtc_test -eq 1  ] ; then
  echo  "Testing rtc..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/rtc
  ./build_rtc_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30  
  ./rtc_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.rtc
  cp $KERNEL_SCRIPTS/rtc/build_rtc_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/rtc/rtc_test_log $THIS_LOG

  sleep 30

 if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
 
  #############################################################################################
  ########################## TEST NFS MOUNT ###################################################
  
  if [ $nfs_test -eq 1  ] ; then  
  
  echo  "Testing NFS mount ..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
   
 
  cd $KERNEL_SCRIPTS/nfs
  ./build_nfs_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./nfs_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.nfs
  cp $KERNEL_SCRIPTS/nfs/build_nfs_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/nfs/nfs_test_log $THIS_LOG 
 
  sleep 30

 
 if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
 fi
 
 fi
  
  #############################################################################################
  ########################## TEST MTD #########################################################
  
if [ $pnormtd_test -eq 1  ] ; then
  echo  "Testing pnormtd..."
  echo  "Switch SW6 to all on and unplug the nand flash board."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  rm -rf $CHECKOUT/kernel/uClinux-dist/romfs/

  cd $KERNEL_SCRIPTS/pnormtd
  ./build_pnormtd_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./pnormtd_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.pnormtd
  cp $KERNEL_SCRIPTS/pnormtd/build_pnormtd_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/pnormtd/pnormtd_test_log $THIS_LOG
  
  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  
  #############################################################################################
  ########################## TEST REBOOT ON JFFS2 FILE SYSTEM ##################################

  if [ $jffs2_reboot_test -eq 1  ] ; then
  
  echo  "Testing reboot on jffs2 file system ..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  rm -rf $CHECKOUT/kernel/uClinux-dist/romfs/

  cd $KERNEL_SCRIPTS/jffs2
  ./build_jffs2_kernel.exp $BOARD_TYPE $KERNEL_SOURCE    1>/dev/null 2>/dev/null
  sleep 30
  ./flash_images.exp  1>/dev/null 2>/dev/null
  sleep 30
  ./jffs2_reboot_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SCRIPTS/jffs2/build_jffs2_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/jffs2/flash_images_log $THIS_LOG
  cp $KERNEL_SCRIPTS/jffs2/jffs2_reboot_test_log $THIS_LOG
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.reboot_jffs2
  cp $KERNEL_SOURCE/images/vmImage $THIS_LOG/vmImage.reboot_jffs2
  cp $KERNEL_SOURCE/images/jffs2.img $THIS_LOG/jffs2.image.reboot_jffs2
  
  sleep 50

  
  #############################################################################################
  ########################## TEST BOOT KERNEL-ONLY UIMAGE ######################################

  echo  "Testing boot kernel-only uImage ..."
  
  cd $KERNEL_SCRIPTS/jffs2
  ./boot_kernel_only_uimage.exp  1>/dev/null 2>/dev/null
  cp $KERNEL_SCRIPTS/jffs2/boot_kernel_only_uimage_log $THIS_LOG

  sleep 300

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  
  #############################################################################################
  ########################## TEST JFFS2 FS #####################################################
 
 if [ $jffs2_fs_test -eq 1  ] ; then 
  echo  "Testing jffs2 fs..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  rm -rf $CHECKOUT/kernel/uClinux-dist/romfs/
  
  cd $KERNEL_SCRIPTS/jffs2
  ./build_jffs2_fs_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./jffs2_fs_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.jffs2_fs
  cp $KERNEL_SCRIPTS/jffs2/build_jffs2_fs_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/jffs2/jffs2_fs_test_log $THIS_LOG
    
  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

    ########################## TEST STRACE #########################################################
  
 if [ $strace_test -eq 1  ] ; then
  echo  "Testing strace..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/strace
  ./build_strace_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./strace_test.exp  /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.strace
  cp $KERNEL_SCRIPTS/strace/build_strace_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/strace/strace_test_log $THIS_LOG

  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

   ########################## TEST MSH #########################################################
  
 if [ $msh_test -eq 1  ] ; then
  echo  "Testing msh..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/msh
  ./build_msh_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./msh_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.msh
  cp $KERNEL_SCRIPTS/msh/build_msh_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/msh/msh_test_log $THIS_LOG

  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

 
   ########################## TEST PTHREAD #########################################################
  
 if [ $pthread_test -eq 1  ] ; then
  echo  "Testing pthread..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/pthread
  ./build_pthread_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./pthread_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.pthread
  cp $KERNEL_SCRIPTS/pthread/build_pthread_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/pthread/pthread_test_log $THIS_LOG

  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  ########################## TEST DPM #########################################################
  
 if [ $dpm_test -eq 1  ] ; then
  echo  "Testing dpm..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/dpm
  ./build_dpm_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./dpm_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.dpm
  cp $KERNEL_SCRIPTS/dpm/build_dpm_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/dpm/dpm_test_log $THIS_LOG

  sleep 30
 
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

   ########################## TEST TIMER #########################################################
  
 if [ $timer_test -eq 1  ] ; then
  echo  "Testing timer..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/timer
  ./build_timer_kernel.exp $BOARD_TYPE $KERNEL_SOURCE 100   1>/dev/null 2>/dev/null
  sleep 30
  ./timer_tick_test.exp 100  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer100 
  
  ./build_timer_kernel.exp $BOARD_TYPE $KERNEL_SOURCE 250   1>/dev/null 2>/dev/null
  sleep 30
  ./timer_tick_test.exp 250  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer250
    
  ./build_timer_kernel.exp $BOARD_TYPE $KERNEL_SOURCE 1000   1>/dev/null 2>/dev/null
  sleep 30
  ./timer_tick_test.exp 1000  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer1000
  cp $KERNEL_SCRIPTS/timer/build_timer_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/timer/timer_tick_test_log $THIS_LOG
  
  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

 
  ########################## TEST POUND #########################################################
  
 if [ $pound_test -eq 1  ] ; then
  echo  "Testing pound..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .


  cd $KERNEL_SCRIPTS/pound
  ./build_pound_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./pound_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.pound
  cp $KERNEL_SCRIPTS/pound/build_pound_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/pound/pound_test_log $THIS_LOG

  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

 
  ##############################################################################################
  ####                    MANUAL TEST                                                 ############
  ################################################################################################
  
  #############################################################################################
  ########################## TEST ADSPI #########################################################
  
  if [ $spiadc_test -eq 1  ] ; then
  echo  "Testing SPIADC..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/spiadc
  ./build_ndso_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ndso 
  cp $KERNEL_SCRIPTS/spiadc/build_ndso_kernel_log $THIS_LOG
  
  ./build_awg_kernel.exp $BOARD_TYPE $KERNEL_SOURCE    1>/dev/null 2>/dev/null
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.awg  
  cp $KERNEL_SCRIPTS/spiadc/build_awg_kernel_log $THIS_LOG
    
   sleep 30
   
  
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ########################## TEST PFLAGS #########################################################
 
 if [ $pflag_test -eq 1  ] ; then
 
  echo  "Testing pflags..."
  echo  "Switch SW5.1 to on."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
    
  cd $KERNEL_SCRIPTS/pflag
  ./build_pflags_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./pflags_test.exp $BOARD_TYPE  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.pflags
  cp $KERNEL_SCRIPTS/pflag/build_pflags_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/pflag/pflags_test_log $THIS_LOG 
  
  sleep 30
    
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ########################## TEST AUDIO #########################################################
  
  if [ $audio_test -eq 1  ] ; then
  
  echo  "Testing audio..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/audio
  ./build_ad1836_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./one_channel_audio_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  sleep 30
  ./two_channel_audio_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ad1836   
  cp $KERNEL_SCRIPTS/audio/build_ad1836_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/audio/one_channel_audio_test_log $THIS_LOG 
  cp $KERNEL_SCRIPTS/audio/two_channel_audio_test_log $THIS_LOG
  
  ./build_ad73311_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./one_channel_audio_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  sleep 30
  ./two_channel_audio_test.exp /dev/ttyS0  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ad73311
  cp $KERNEL_SCRIPTS/audio/build_ad73311_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/audio/one_channel_audio_test_log $THIS_LOG 
  cp $KERNEL_SCRIPTS/audio/two_channel_audio_test_log $THIS_LOG
  
  sleep 300

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ########################## TEST DPMC #####################################################
  if [ $dpmc_test -eq 1  ] ; then
  echo  "Testing dpmc..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/dpmc
  ./build_dpmc_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null  
  sleep 30
  ./dpmc_test.exp 200000000 80000000 850  1>/dev/null 2>/dev/null
   
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
  
  cd $KERNEL_SCRIPTS/dpmc
  sleep 30
  ./dpmc_test.exp 300000000 100000000 1000  1>/dev/null 2>/dev/null
    
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi
  
  cd $KERNEL_SCRIPTS/dpmc
  sleep 30
  ./dpmc_test.exp 500000000 100000000 1200  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.dpmc
  cp $KERNEL_SCRIPTS/dpmc/build_dpmc_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/dpmc/dpmc_test_log $THIS_LOG
  
  sleep 30 
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

   #############################################################################################
  ########################## TEST JOYSTICK #####################################################
  if [ $joystick_test -eq 1  ] ; then
  echo  "Testing joystick..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/joystick
  ./build_joystick_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./joystick_test.exp  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.joystick
  cp $KERNEL_SCRIPTS/joystick/build_joystick_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/joystick/joystick_test_log $THIS_LOG
  
  
  sleep 30
 
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ########################## TEST TWI #########################################################
  
  if [ $i2ctwi_test -eq 1  ] ; then
  echo  "Testing I2CTWI..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  
  cd $KERNEL_SCRIPTS/i2ctwi
  
  ./build_i2ctwi_lcd_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./i2ctwi_lcd_test.exp   1>/dev/null 2>/dev/null
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.i2ctwi_lcd
  cp $KERNEL_SCRIPTS/i2ctwi/build_i2ctwi_lcd_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/i2ctwi/i2ctwi_lcd_test_log $THIS_LOG
  
  ./build_i2ctwi_keyboard_kernel.exp $BOARD_TYPE $KERNEL_SOURCE    1>/dev/null 2>/dev/null
  sleep 30
  ./i2ctwi_keyboard_test.exp   1>/dev/null 2>/dev/null
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.i2ctwi_keyboard
  cp $KERNEL_SCRIPTS/i2ctwi/build_i2ctwi_keyboard_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/i2ctwi/i2ctwi_keyboard_test_log $THIS_LOG
     
  sleep 30
 
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ################# TEST BOOT KERNEL AND MOUNT JFFS2 FS FROM SPI FLASH ########################

  if [ $snormtd_test -eq 1  ] ; then
  echo  "Testing boot kernel and mount jffs2 file system from SPI flash ..."
 # Please set the chip selection to the 3rd one on both bf533 and bf537 board.

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  rm -rf $CHECKOUT/kernel/uClinux-dist/romfs/

  cd $KERNEL_SCRIPTS/snormtd
  ./build_snormtd_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./spi_flash_images.exp  1>/dev/null 2>/dev/null
  sleep 30
  ./snormtd_reboot_test.exp  1>/dev/null 2>/dev/null
  sleep 30

  cp $KERNEL_SCRIPTS/snormtd/build_snormtd_kernel_log $THIS_LOG
  cp $KERNEL_SOURCE/images/vmImage $THIS_LOG/vmImage.snormtd
  cp $KERNEL_SOURCE/images/jffs2.img $THIS_LOG/jffs2.img.snormtd

  cp $KERNEL_SCRIPTS/snormtd/spi_flash_images_log $THIS_LOG
  cp $KERNEL_SCRIPTS/snormtd/snormtd_reboot_test_log $THIS_LOG


  cd $KERNEL_SCRIPTS/snormtd
  ./build_snormtd_mount_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./snormtd_test.exp  1>/dev/null 2>/dev/null

  cp $KERNEL_SCRIPTS/snormtd/build_snormtd_mount_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/snormtd/snormtd_test_log $THIS_LOG
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.snormtd
  
  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

  #############################################################################################
  ########     Following tests are only for BF537 BOARD.         ##############################
  #############################################################################################
  
  ################# TEST CF CARD ##############################################################
  
if [ $cf_card_test -eq 1  ] ; then
  echo  "Testing CF card ..."
# Please switch the SW5 to all off,SW6 to on on off off,and plug the add-on board.

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/cfcard
  ./build_cf_card_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./cf_card_test.exp   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.cf_card
  cp $KERNEL_SCRIPTS/cfcard/build_cf_card_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/cfcard/cf_card_test_log $THIS_LOG
  
  sleep 30

 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  ################# TEST IDE DEVICES ##############################################################
  
if [ $ide_test -eq 1  ] ; then
  echo  "Testing ide harddisk and cdrom ..."
 # Please switch the SW5 to all off,SW6 to on on off off,and plug the add-on board.

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel  
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/ide
  $KERNEL_SCRIPTS/build_ide_harddisk_cdrom_kernel.exp $BOARD_TYPE $KERNEL_SOURCE   1>/dev/null 2>/dev/null
  sleep 30
  ./ide_harddisk_test.exp   1>/dev/null 2>/dev/null
  sleep 30
  ./ide_cdrom_test.exp   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ide_harddisk_cdrom
  cp $KERNEL_SCRIPTS/build_ide_harddisk_cdrom_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/ide/ide_harddisk_test_log $THIS_LOG
  cp $KERNEL_SCRIPTS/ide/ide_cdrom_test_log $THIS_LOG

  sleep 30
 
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
  #############################################################################################
  ################# TEST WIRELESS CARD ##############################################################
  
if [ $wireless_network_test -eq 1  ] ; then

  echo  "Testing wireless card ..."
 # Please switch the SW5 to all off,SW6 to on on off off,and plug the add-on board.

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel   
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/wireless
  ./build_wireless_network_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./wireless_network_test.exp   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.wireless
  cp $KERNEL_SCRIPTS/wireless/build_wireless_network_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/wireless/wireless_network_test_log $THIS_LOG
  
  sleep 300
   

  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi

 
 #############################################################################################
 ########################## TEST YAFFS #########################################################
  
if [ $yaffs_test -eq 1  ] ; then

  echo  "Testing YAFFS..."
  #Switch SW6 to on on off on, SW5 all on and plug the nand flash board.

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/yaffs
  ./build_yaffs_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./test_yaffs /dev/ttyS0   1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.yaffs
  cp $KERNEL_SCRIPTS/yaffs/build_yaffs_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/yaffs/test_yaffs_log $THIS_LOG

  sleep 30
   
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null 
   sleep 10
  fi

  fi
 
   #############################################################################################
  ########################## TEST PPIFCD #####################################################
  if [ $ppifcd_test -eq 1  ] ; then
  echo  "Testing ppifcd..."
  
  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .
  
  cd $KERNEL_SCRIPTS/ppifcd
  ./build_ppifcd_kernel.exp $BOARD_TYPE $KERNEL_SOURCE  1>/dev/null 2>/dev/null
  sleep 30
  ./ppifcd_test.exp $BOARD_TYPE  1>/dev/null 2>/dev/null
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ppifcd
  cp $KERNEL_SCRIPTS/ppifcd/build_ppifcd_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/ppifcd/ppifcd_test_log $THIS_LOG
  cp $KERNEL_SCRIPTS/ppifcd/img.bmp $THIS_LOG
  
  sleep 30
  
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null     
   sleep 10
  fi

  fi


#############################################################################################
########################## TEST DLL #########################################################
if [ $dll_test -eq 1 ] ; then
  echo "Testing dll..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/dll
  ./build_dll_kernel.exp $BOARD_TYPE $KERNEL_SOURCE > /dev/null 2>&1
  sleep 30
  ./dll_test > /dev/null 2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.dll
  cp $KERNEL_SCRIPTS/dll/build_dll_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/dll/dll_test_log $THIS_LOG
    
  sleep 30
  
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null     
   sleep 10
  fi

fi


#############################################################################################
########################## TEST CoreB #######################################################
if [ $coreb_test -eq 1 ] ; then
  echo "Testing coreb..."

  rm -rf $CHECKOUT/kernel/*
  cd $CHECKOUT/kernel
  cp -a  $CHECKOUT/kernel_bak/*  .

  cd $KERNEL_SCRIPTS/coreb
  ./build_coreb_kernel.exp $BOARD_TYPE $KERNEL_SOURCE > /dev/null 2>&1
  sleep 30
  ./coreb_test > /dev/null 2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.coreb
  cp $KERNEL_SCRIPTS/coreb/build_coreb_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/coreb/coreb_test_log $THIS_LOG
    
  sleep 30
  
 
  if [ $reset_board -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp   1>/dev/null 2>/dev/null     
   sleep 10
  fi

fi


