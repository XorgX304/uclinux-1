#!/bin/sh
########################################################################################################################
######### To run this script, please first set following uboot varibles properly on your target board  #################
######### set  bootcmd   run tftpboot                                                                  #################
######### set  tftpboot  'tftp 0x1000000 linux;bootelf'                                                #################
######### set  ipaddr    10.100.4.50  (set your board ip here)                                         #################
######### set  serverip  10.100.4.174 (set your server ip here)                                        #################
########################################################################################################################

 ############### Set up the testing environment. Edit the following variables to suit your situation. ###################
 
 USER=/home/test
 BOARD_CONFIG=BF537-STAMP-STD
 CPU=BF537
 REVISION=0.2
 KERNEL_PATH=$USER/checkouts/kernel
 BINARY_FORMAT=flat
 ALLOCATOR=slab\(p2\)
 ICACHE=on
 DCACHE=off
 POLICY=write_through
 UART_MODE=dma
 THIS_LOG="$USER/test_scripts/kernel/logs/all_""$BOARD_CONFIG""(""$REVISION"")""_""$BINARY_FORMAT""_""$ALLOCATOR""_icache(""$ICACHE"")_""dcache(""$DCACHE"",""$POLICY"")_UART(""$UART_MODE"")""/THIS_LOG"
 
 
 ########################################### Please don't edit anything below this line.###################################

if [ $# -lt 1 ] ; then
  echo "Please input BOARD_CONFIG [ CPU REVISION KERNEL_PATH BINARY_FORMAT ALLOCATOR ICACHE DCACHE POLICY UART_MODE THIS_LOG VCO_MULT CCLK_DIV SCLK_DIV ] values: "
  echo
  echo "The BOARD_CONFIG :  BF533-STAMP-STD, BF537-STAMP-STD, BF537-STAMP-IDE,etc."
  echo "The CPU :           BF533, BF537, BF561,etc."
  echo "The REVISION :      0.2, 0.3 ,etc."
  echo "The BINARY_FORMAT : flat, elf, shared-flat."
  echo "The ALLOCATOR :     slab\(p2\), slab\(np2\), slob\(p2\), slob\(np2\)."
  echo "The ICACHE,DCACHE : on, off."
  echo "The POLICY :        write_through, write_back."
  echo "The UART_MODE :     dma, pio."
  echo "For example:./kernel_test BF537-STAMP-STD BF537 /home/test/checkouts/kernel flat slab\(p2\) on on write_through dma /home/test/test_scripts/kernel/logs/all_BF537_flat_slab(p2)_icache(on)_dcache(on,write_through)_UART(dma)/THIS_LOG."
  exit
fi

if [ $# -gt 0 ] ; then
  BOARD_CONFIG=$1
  echo  "##### Testing is done with: $BOARD_CONFIG."
fi

if [ $# -gt 1 ] ; then     
  CPU=$2
  echo "##### CPU: $CPU." 
fi

if [ $# -gt 2 ] ; then
  REVISION=$3
  echo "##### REVISION: $REVISION."
fi

  if [ $# -gt 3 ] ; then 
  KERNEL_PATH=$4
  echo "##### KERNEL_PATH: $KERNEL_PATH."  
fi

  KERNEL_PATH_BAK="$KERNEL_PATH""_bak"  
  KERNEL_SOURCE=$KERNEL_PATH/uclinux-dist
  KERNEL_SOURCE_BAK=$KERNEL_PATH_BAK/uclinux-dist  
  KERNEL_SCRIPTS=$KERNEL_SOURCE/testsuites  
  
if [ $# -gt 4 ] ; then
  BINARY_FORMAT=$5  
  echo "##### BINARY_FORMAT: $BINARY_FORMAT."
fi

if [ $# -gt 5 ] ; then
  ALLOCATOR=$6
  echo "##### ALLOCATOR: $ALLOCATOR."
fi
  
if [ $# -gt 6 ] ; then
  ICACHE=$7
  DCACHE=$8
  POLICY=$9  
  echo "##### ICACHE: $ICACHE, DCACHE: $DCACHE, POLICY is $POLICY." 
fi
  
if [ $# -gt 9 ] ; then
  UART_MODE=${10}
  echo "##### UART_MODE: $UART_MODE."
fi
  
if [ $# -gt 10 ] ; then
  THIS_LOG=${11}
  echo "##### Test results are in folder: $THIS_LOG."
fi
 
if [ $# -gt 11 ] ; then
  VCO_MULT=${12}
  CCLK_DIV=${13}
  SCLK_DIV=${14}
  echo "##### VCO_MULT: $VCO_MULT, CCLK_DIV: $CCLK_DIV, SCLK_DIV: $SCLK_DIV."
fi


###### See if kernel has been checked out.##################################################
 
if [ ! -d $KERNEL_PATH_BAK ] ; then
  echo  "##### No kernel source in $KERNEL_PATH_BAK."
  exit
fi
if [ ! -d $KERNEL_PATH ] ; then
  mkdir -p $KERNEL_PATH
  echo  "##### Testing is doing against the kernel source in $KERNEL_PATH."
fi

if [ ! -d $THIS_LOG ] ; then
  mkdir -p $THIS_LOG    
else 
  rm -rf $THIS_LOG/*  
fi
  
### set this value to 1 if your target board could be restarted from host machine parallel port.

   RESET_BOARD=1 
   BUILD_POLICY=1
 
   n=50
 
   AUTO_TESTCASE=(  [0]="serial"    [1]="ethernet"   [2]="ethernet_in_buffer"  [3]="stress"  [4]="nfs"  [5]="ramfs"  [6]="module"  [7]="kgdb"  [8]="rtc"  [9]="watchdog"  [10]="pnormtd"  [11]="jffs2"  [12]="jffs2_fs"  [13]="strace"  [14]="msh"  [15]="pthread"  [16]="dpm"  [17]="l1_memory"  [18]="l1_app"  [19]="dll"   [20]="sigqueue"  [21]="pound"  [22]="sqlite"   [23]="cfcard" [24]="ide_cdrom"  [25]="yaffs"  [26]="ad9960"  [27]="oprofile"  [28]="gpio"  [29]="malloc_perf"  [30]="sram_alloc"   [31]="i2ctwi"  [32]="" [33]="sport"  [34]="erestart" [$(( n + 1 ))]="timer" [$(( n + 2 ))]="ltp"  [$(( n + 3 ))]="audio_ad1836"  [$(( n + 4 ))]="audio_ad73311"   [[$(( n + 5 ))]="audio_ad1981b"  $(( n + 6 ))]="snormtd"  [$(( n + 7 ))]="dpmc"  [$(( n + 8 ))]="coreb" [$(( n + 9 ))]="video_adv7171"  [$(( n + 10 ))]="video_adv7393" [[$(( n + 11 ))]="tftlcd" )

   AUTO_RUN_STATUS=(  [0]="1"  [1]="1"  [2]="1" [3]="1"  [4]="1"  [5]="1"   [6]="1"  [7]="1"  [8]="1"   [9]="0"   [10]="1"   [11]="1"   [12]="1"     [13]="1" [14]="1"   [15]="1"  [16]="1"    [17]="1"  [18]="1"  [19]="1"  [20]="1"  [21]="1"   [22]="1" [23]="0"   [24]="0"  [25]="0"  [26]="0"  [27]="1"  [28]="1" [29]="1"  [30]="1"   [31]="0"  [32]="0"  [33]="0"  [34]="1" [$(( n + 1 ))]="1"  [$(( n + 2 ))]="1"  [$(( n + 3 ))]="0"  [$(( n + 4 ))]="0"  [$(( n + 5 ))]="0"  [$(( n + 6 ))]="0"  [$(( n + 7 ))]="1"  [$(( n + 8 ))]="0" [$(( n + 9 ))]="0" [$(( n + 10 ))]="0" [$(( n + 11 ))]="0" )

   MANUAL_TESTCASE=( [0]="pflag"  [1]="pfbutton"  [2]="ppifcd"  [3]="joystick"  [4]="ndso"  [5]="awg"  [6]="i2ctwi"  [7]="wireless" [8]="bluetooth"  [9]="bluetoothcf"  [10]="canbus"   [11]="irda"  [12]="pbx"  [13]="linphone"  [14]="sport_uart"  [15]="netaudio" [16]="touchscreen"   [$(( n + 1 ))]="serial_uart1"  )
   
   MANUAL_RUN_STATUS=( [0]="1"    [1]="1"     [2]="1"    [3]="1"    [4]="1"  [5]="1"  [6]="1"  [7]="1" [8]="1"  [9]="1"  [10]="1"   [11]="1"  [12]="1"  [13]="1"  [14]="1"  [15]="1" [16]="1"   [$(( n + 1 ))]="0"  )


#################################    BOARD CONFIG DEFINITION    ###################################################### 

if [ $BOARD_CONFIG = "BF537-STAMP-STD" ] ; then   
   
   BOARD_TYPE=BF537-STAMP
   
   AUTO_RUN_STATUS[9]="1"; AUTO_RUN_STATUS[26]="1"; AUTO_RUN_STATUS[$(( n + 3 ))]="1"; AUTO_RUN_STATUS[$(( n + 6 ))]="1"     

fi


if [ $BOARD_CONFIG = "BF537-STAMP-AD7171" ] ; then

   BOARD_TYPE=BF537-STAMP
   
   AUTO_RUN_STATUS[9]="1"; AUTO_RUN_STATUS[31]="1"; AUTO_RUN_STATUS[$(( n + 9 ))]="1"

fi


if [ $BOARD_CONFIG = "BF537-STAMP-ADV7393" ] ; then

   BOARD_TYPE=BF537-STAMP
   
   AUTO_RUN_STATUS[9]="1"; AUTO_RUN_STATUS[31]="1"; AUTO_RUN_STATUS[$(( n + 10 ))]="1"
##add 1981b test here
   AUTO_RUN_STATUS[$(( n + 5 ))]="1"

fi


if [ $BOARD_CONFIG = "BF537-STAMP-AD(73311)" ] ; then

   BOARD_TYPE=BF537-STAMP
   
   AUTO_RUN_STATUS[9]="1"; AUTO_RUN_STATUS[31]="1"; AUTO_RUN_STATUS[33]="1"; AUTO_RUN_STATUS[$(( n + 4 ))]="1"; AUTO_RUN_STATUS[$(( n + 11 ))]="1"

fi


# Since the SW6 setting for jffs2(all on) and cf card(on on off off) are conflicting, disable jffs2 test here.
if [ $BOARD_CONFIG = "BF537-STAMP-CF" ] ; then

   BOARD_TYPE=BF537-STAMP
   
   AUTO_RUN_STATUS[9]="1"; AUTO_RUN_STATUS[10]="0"; AUTO_RUN_STATUS[11]="0"; AUTO_RUN_STATUS[12]="0"; AUTO_RUN_STATUS[23]="1"; AUTO_RUN_STATUS[24]="1"; AUTO_RUN_STATUS[25]="1"      
fi


if [ $BOARD_CONFIG = "BF533-STAMP-STD" ] ; then

   BOARD_TYPE=BF533-STAMP
   
   MANUAL_RUN_STATUS[3]="0"; MANUAL_RUN_STATUS[7]="0"; MANUAL_RUN_STATUS[8]="0"; MANUAL_RUN_STATUS[9]="0"; MANUAL_RUN_STATUS[10]="0"; MANUAL_RUN_STATUS[11]="0" 
fi


if [ $BOARD_CONFIG = "BF533-EZKIT-STD" ] ; then

   BOARD_TYPE=BF533-EZKIT

   AUTO_RUN_STATUS[10]="0"; AUTO_RUN_STATUS[11]="0"; AUTO_RUN_STATUS[12]="0"; AUTO_RUN_STATUS[21]="0" 
   
   MANUAL_RUN_STATUS=( [0]="0"    [1]="0"     [2]="0"    [3]="0"    [4]="0"  [5]="0"  [6]="0"  [7]="0" [8]="0"  [9]="0"  [10]="0"   [11]="0"  [12]="0"  [13]="0"  [14]="0"  [15]="0"    [$(( n + 1 ))]="0"  )
      
fi


if [ $BOARD_CONFIG = "BF561-EZKIT-STD" ] ; then

   BOARD_TYPE=BF561-EZKIT
   
   AUTO_RUN_STATUS[8]="0";AUTO_RUN_STATUS[21]="0"; AUTO_RUN_STATUS[$(( n + 8 ))]="1"     
   
   MANUAL_RUN_STATUS=( [0]="0"    [1]="0"     [2]="0"    [3]="0"    [4]="0"  [5]="0"  [6]="0"  [7]="0" [8]="0"  [9]="0"  [10]="0"   [11]="0"  [12]="0"  [13]="0"  [14]="0"  [15]="0"    [$(( n + 1 ))]="0"  )

fi

#########################   Build and run the tests     #######################################

export PATH=/opt/uClinux/bfin-uclinux/bin:/opt/uClinux/bfin-elf/bin:/opt/uClinux/bfin-linux-uclibc/bin:$PATH
echo "##### The Toolchain is:" 
/opt/uClinux/bfin-uclinux/bin/bfin-uclinux-gcc -v
echo 

cd  $KERNEL_SOURCE_BAK/testsuites
chmod +x *.exp  */*.exp
cp  $KERNEL_SOURCE_BAK/testsuites/test_scripts/decide_all_standard  $USER/test_scripts/kernel
cp  $KERNEL_SOURCE_BAK/testsuites/test_scripts/test_runtime_control  $USER/test_scripts/kernel
cp  $USER/test_scripts/kernel/reset_board $KERNEL_SOURCE_BAK/testsuites/
cp  $USER/test_scripts/kernel/reset_board $KERNEL_SOURCE_BAK/testsuites/ltp

  #############################################################################################
  ############################ BUILD POLICY KERNEL ############################################
if [ $BUILD_POLICY -eq 1  ] ; then
  echo  "Running build policy kernel... "
  
  rm -rf $KERNEL_PATH
  echo  "mv kernel source "
  mv $KERNEL_PATH_BAK $KERNEL_PATH
     
  echo  "start building policy kernel..."
  cd $KERNEL_SCRIPTS/policy
  ./build_policy_kernel.exp  $BOARD_TYPE $CPU $REVISION $KERNEL_SOURCE $BINARY_FORMAT $ALLOCATOR $ICACHE $DCACHE $POLICY $UART_MODE  >/dev/null  2>&1
    
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.policy
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.policy
  cp $KERNEL_SCRIPTS/policy/build_policy_kernel_log  $THIS_LOG
  
  if [ ! -f $KERNEL_SOURCE/images/linux ] ; then
  echo  "Linux image fails to be generated.Error!"
  tail -50  ./build_policy_kernel_log
  exit
  fi
      
  sleep 30
  
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi
  
  echo  "mv kernel source back to KERNEL_PATH_BAK."
  mv $KERNEL_PATH $KERNEL_PATH_BAK 
  mkdir -p $KERNEL_PATH
  
  echo  "cp kernel source to KERNEL_PATH."
  cd $KERNEL_PATH/
  cp -a  $KERNEL_PATH_BAK/*  .
    
  sleep 10
fi
  
  #############################################################################################
  ####################            AUTOMATED TESTING             ###############################
  #############################################################################################
 
for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
do
  if [ ${AUTO_RUN_STATUS[$i]} -eq 1  ] ; then
  
  echo  "Start testing ${AUTO_TESTCASE[$i]}..."

  if [ ${AUTO_TESTCASE[$i]} != "serial" ] &&
     [ ${AUTO_TESTCASE[$i]} != "ethernet" ] &&
     [ ${AUTO_TESTCASE[$i]} != "nfs" ] &&
     [ ${AUTO_TESTCASE[$i]} != "module" ] &&
     [ ${AUTO_TESTCASE[$i]} != "msh" ] &&
     [ ${AUTO_TESTCASE[$i]} != "dpm" ] &&
     [ ${AUTO_TESTCASE[$i]} != "pound" ] &&
     [ ${AUTO_TESTCASE[$i]} != "cfcard" ] &&
     [ ${AUTO_TESTCASE[$i]} != "sram_alloc" ] &&
     [ ${AUTO_TESTCASE[$i]} != "timer" ] ; then
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  fi
  
  rm -rf romfs/ images/

  if [ ${AUTO_TESTCASE[$i]} == "jffs2_fs" ] ; then
  cd $KERNEL_SCRIPTS/jffs2
  elif [ ${AUTO_TESTCASE[$i]} == "ethernet_in_buffer" ] ; then
  cd $KERNEL_SCRIPTS/ethernet
  elif [ ${AUTO_TESTCASE[$i]} == "ide_cdrom" ] ; then
  cd $KERNEL_SCRIPTS/ide
  else
  cd $KERNEL_SCRIPTS/${AUTO_TESTCASE[$i]}    
  fi
  
  ./build_${AUTO_TESTCASE[$i]}_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  if [ ! -f $KERNEL_SOURCE/images/linux ]
  then
        echo "$0:   Error, failed."
	tail -50 ./build_${AUTO_TESTCASE[$i]}_kernel_log
  else
 	sleep 30
	if [ ${AUTO_TESTCASE[$i]} == "jffs2" ] || [ ${AUTO_TESTCASE[$i]} == "jffs2_fs" ] ; then	
	  ./flash_images.exp  $BOARD_TYPE  >/dev/null  2>&1
	  sleep 30 
	fi
	
	if [ ${AUTO_TESTCASE[$i]} == "ethernet_in_buffer" ] ; then
	./ethernet_test.exp  $BOARD_TYPE in_buffer >/dev/null  2>&1 
	else
	./${AUTO_TESTCASE[$i]}_test.exp  $BOARD_TYPE >/dev/null  2>&1    
	fi
  
  fi
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.${AUTO_TESTCASE[$i]}
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.${AUTO_TESTCASE[$i]}  
  
  if [ ${AUTO_TESTCASE[$i]} == "jffs2_fs" ] ; then
  cp $KERNEL_SCRIPTS/jffs2/*_log  $THIS_LOG
  elif [ ${AUTO_TESTCASE[$i]} == "ethernet_in_buffer" ] ; then
  cp $KERNEL_SCRIPTS/ethernet/*_log  $THIS_LOG
  elif [ ${AUTO_TESTCASE[$i]} == "ide_cdrom" ] ; then
  cp $KERNEL_SCRIPTS/ide/*_log  $THIS_LOG
  else
  cp $KERNEL_SCRIPTS/${AUTO_TESTCASE[$i]}/*_log  $THIS_LOG   
  fi
    
  if [ ${AUTO_TESTCASE[$i]} == "cfcard" ] || [ ${AUTO_TESTCASE[$i]} == "ide_cdrom" ] ; then
  cp $KERNEL_SOURCE/images/uImage  $THIS_LOG/uImage.${AUTO_TESTCASE[$i]}
  cp $KERNEL_SOURCE/images/rootfs.ext2  $THIS_LOG/rootfs.ext2.${AUTO_TESTCASE[$i]}  
  fi
   
  if [ ${AUTO_TESTCASE[$i]} == "jffs2" ] ; then
  cp $KERNEL_SOURCE/images/vmImage  $THIS_LOG/vmImage.${AUTO_TESTCASE[$i]}
  cp $KERNEL_SOURCE/images/rootfs.jffs2  $THIS_LOG/rootfs.jffs2.${AUTO_TESTCASE[$i]}  
  
  cd $KERNEL_SCRIPTS/${AUTO_TESTCASE[$i]}
  sleep 30
  ./boot_kernel_only_uimage_test.exp  >/dev/null  2>&1
  cp $KERNEL_SCRIPTS/${AUTO_TESTCASE[$i]}/boot_kernel_only_uimage_test_log $THIS_LOG

  fi
 
  if [ ${AUTO_TESTCASE[$i]} == "jffs2_fs" ] ; then
  cp $KERNEL_SOURCE/images/vmImage  $THIS_LOG/vmImage.${AUTO_TESTCASE[$i]}
  cp $KERNEL_SOURCE/images/rootfs.jffs2  $THIS_LOG/rootfs.jffs2.${AUTO_TESTCASE[$i]}
  fi
 
  if [ ${AUTO_TESTCASE[$i]} == "msh" ] ; then
  rm -rf $KERNEL_PATH/uclinux-dist/user/busybox
  cd $KERNEL_PATH/uclinux-dist/user 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/user/busybox  .
  fi
  
  echo  "End testing ${AUTO_TESTCASE[$i]}..."
  sleep 10
  
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi 
  
  fi
  done
  
  ###############################################################################################
  ########################## TEST TIMER #########################################################
  
 if [ ${AUTO_RUN_STATUS[$(( n + 1 ))]} -eq 1  ] ; then
  echo  "Testing timer..."

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  

  cd $KERNEL_SCRIPTS/timer
  ./build_timer_kernel.exp $BOARD_TYPE  100  >/dev/null  2>&1
  sleep 30
  ./timer_tick_test.exp 100 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer100 
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.timer100
  
  ./build_timer_kernel.exp $BOARD_TYPE  250  >/dev/null  2>&1
  sleep 30
  ./timer_tick_test.exp 250 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer250
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.timer250
    
  ./build_timer_kernel.exp $BOARD_TYPE  1000  >/dev/null  2>&1
  sleep 30
  ./timer_tick_test.exp 1000 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.timer1000
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.timer1000
  cp $KERNEL_SCRIPTS/timer/*_log $THIS_LOG
  
  sleep 30

 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi


  #############################################################################################
  ########################## TEST VIDEO #########################################################
  if [ ${AUTO_RUN_STATUS[$(( n + 9 ))]} -eq 1  ] ; then
  
  echo  "Testing video adv7171..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/

  cd $KERNEL_SCRIPTS/video
  ./build_video_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./adv7171_test.exp >/dev/null  2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.adv7171
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.adv7171
  cp $KERNEL_SCRIPTS/video/build_video_kernel_log $THIS_LOG/
  cp $KERNEL_SCRIPTS/video/adv7171_test_log $THIS_LOG/video_adv7171_test_log

  sleep 300
 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi
  

  if [ ${AUTO_RUN_STATUS[$(( n + 10 ))]} -eq 1  ] ; then
  
  echo  "Testing video adv7393..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/

  cd $KERNEL_SCRIPTS/video
  ./build_video_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./adv7393_test.exp >/dev/null  2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.adv7393
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.adv7393
  cp $KERNEL_SCRIPTS/video/build_video_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/video/adv7393_test_log $THIS_LOG/video_adv7393_test_log

  sleep 300
 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi


  #############################################################################################
  ########################## TEST AUDIO #########################################################
  
  if [ ${AUTO_RUN_STATUS[$(( n + 3 ))]} -eq 1  ] ; then
  
  echo  "Testing audio ad1836..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  cd $KERNEL_SCRIPTS/audio
  ./build_ad1836_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./one_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  sleep 30
  ./two_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ad1836   
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.ad1836
  cp $KERNEL_SCRIPTS/audio/build_ad1836_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/audio/one_channel_audio_test_log $THIS_LOG/one_channel_audio_test_log.ad1836
  cp $KERNEL_SCRIPTS/audio/two_channel_audio_test_log $THIS_LOG/two_channel_audio_test_log.ad1836
    
  sleep 300

 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi


  if [ ${AUTO_RUN_STATUS[$(( n + 4 ))]} -eq 1  ] ; then
  
  echo  "Testing audio ad73311..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
   rm -rf romfs/ images/
   cd $KERNEL_SCRIPTS/audio 
  ./build_ad73311_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./one_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  sleep 30
  ./two_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ad73311
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.ad73311
  cp $KERNEL_SCRIPTS/audio/build_ad73311_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/audio/one_channel_audio_test_log $THIS_LOG/one_channel_audio_test_log.ad73311 
  cp $KERNEL_SCRIPTS/audio/two_channel_audio_test_log $THIS_LOG/two_channel_audio_test_log.ad73311
  
  sleep 300


  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi


  if [ ${AUTO_RUN_STATUS[$(( n + 5 ))]} -eq 1  ] ; then
  
  echo  "Testing audio ad1981b..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  cd $KERNEL_SCRIPTS/audio
  ./build_ad1981b_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./one_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  sleep 30
  ./two_channel_audio_test.exp /dev/ttyS0 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ad1981b
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.ad1981b
  cp $KERNEL_SCRIPTS/audio/build_ad1981b_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/audio/one_channel_audio_test_log $THIS_LOG/one_channel_audio_test_log.ad1981b
  cp $KERNEL_SCRIPTS/audio/two_channel_audio_test_log $THIS_LOG/two_channel_audio_test_log.ad1981b
    
  sleep 300

 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi

  #############################################################################################
  ###################################### TEST TFTLCD###########################################
  
  if [ ${AUTO_RUN_STATUS[$(( n + 11 ))]} -eq 1  ] ; then

  echo  "Testing tftlcd landscape..."

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/

  cd $KERNEL_SCRIPTS/tftlcd
  ./build_tftlcd_landscape_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./tftlcd_test.exp >/dev/null  2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.tftlcd.landscape
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.tftlcd.landscape
  cp $KERNEL_SCRIPTS/tftlcd/build_tftlcd_landscape_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/tftlcd/tftlcd_test_log $THIS_LOG/tftlcd_test_log.landscape 

  sleep 300

  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  echo  "Testing tftlcd portrait..."

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/

  cd $KERNEL_SCRIPTS/tftlcd
  ./build_tftlcd_portrait_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./tftlcd_test.exp >/dev/null  2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.tftlcd.portrait
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.tftlcd.portrait
  cp $KERNEL_SCRIPTS/tftlcd/build_tftlcd_portrait_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/tftlcd/tftlcd_test_log $THIS_LOG/tftlcd_test_log.portrait

  sleep 300

  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi


   #############################################################################################
  ################# TEST BOOT KERNEL AND MOUNT JFFS2 FS FROM SPI FLASH ########################

  if [ ${AUTO_RUN_STATUS[$(( n + 6 ))]} -eq 1  ] ; then
  echo  "Testing boot kernel and mount jffs2 file system from SPI flash ..."
 # Please set the chip selection to the 3rd one on both bf533 and bf537 board.

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  cd $KERNEL_SCRIPTS/snormtd
  ./build_snormtd_kernel.exp $BOARD_TYPE   >/dev/null  2>&1
  sleep 30
  ./spi_flash_images.exp >/dev/null  2>&1
  sleep 30
  ./snormtd_reboot_test.exp >/dev/null  2>&1
  sleep 30

  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.snormtd
  cp $KERNEL_SCRIPTS/snormtd/build_snormtd_kernel_log $THIS_LOG
  cp $KERNEL_SOURCE/images/vmImage $THIS_LOG/vmImage.snormtd
  cp $KERNEL_SOURCE/images/rootfs.jffs2 $THIS_LOG/rootfs.jffs2.snormtd
  cp $KERNEL_SCRIPTS/snormtd/spi_flash_images_log $THIS_LOG
  cp $KERNEL_SCRIPTS/snormtd/snormtd_reboot_test_log $THIS_LOG

    
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  cd $KERNEL_SCRIPTS/snormtd
  ./build_snormtd_mount_kernel.exp $BOARD_TYPE   >/dev/null  2>&1
  sleep 30
  ./snormtd_test.exp >/dev/null  2>&1

  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.snormtd_mount
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.snormtd_mount  
  cp $KERNEL_SCRIPTS/snormtd/build_snormtd_mount_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/snormtd/snormtd_test_log $THIS_LOG  
  
  sleep 30
 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi

  
  ##########################################################################################
  ########################## TEST DPMC #####################################################
  
  if [ ${AUTO_RUN_STATUS[$(( n + 7 ))]} -eq 1  ] ; then
  echo  "Testing dpmc..."
  
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  cd $KERNEL_SCRIPTS/dpmc
  ./build_dpmc_kernel.exp $BOARD_TYPE >/dev/null  2>&1  
  sleep 30
  ./dpmc_test.exp 200000000 80000000 850 >/dev/null  2>&1
   
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi
  
  cd $KERNEL_SCRIPTS/dpmc
  sleep 30
  ./dpmc_test.exp 300000000 100000000 1000 >/dev/null  2>&1
    
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi
  
  cd $KERNEL_SCRIPTS/dpmc
  sleep 30
  ./dpmc_test.exp 500000000 100000000 1200 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.dpmc
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.dpmc
  cp $KERNEL_SCRIPTS/dpmc/build_dpmc_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/dpmc/dpmc_test_log $THIS_LOG
  
  sleep 30 
 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi



#############################################################################################
########################## TEST LTP #########################################################

if [ ${AUTO_RUN_STATUS[$(( n + 2 ))]} -eq 1 ] ; then
  echo "Testing LTP..."

  ltp_args=( [0]="1 1 1" [1]="1 1 2" [2]="1 2" [3]="2 1 1" [4]="2 1 2" [5]="2 2" )
  ltp_suf=(wb_slab_buddy wb_slab_np2 wb_slob wt_slab_buddy wt_slab_np2 wt_slob)

  for i in 0 1 2 3 4 5
  do
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
    cd $KERNEL_SCRIPTS/ltp
    echo "change dir to $KERNEL_SCRIPTS/ltp"

    ./build_ltp_kernel.exp $BOARD_TYPE $KERNEL_SOURCE ${ltp_args[i]}> /dev/null 2>&1
  if [ $? == 1 ] ; then
    echo "ltp build kernel failed for ${ltp_suf[i]}"
    cp $KERNEL_SCRIPTS/ltp/build_ltp_kernel_log $THIS_LOG/build_ltp_kernel_log_${ltp_suf[i]}
    echo "ltp copy build_ltp_kernel_log done"
  else	
    # do if build kernel succeed
    echo "build_ltp_kernel.exp done"
    sleep 30
    ./ltp_auto_test.exp /dev/ttyS0 2 > /dev/null 2>&1
    echo "ltp_auto_test.exp done"
    ./ltp_compare_results_all.sh config/summary.base $KERNEL_SCRIPTS/ltp/test/logs/summary.new >> ltp_test_log
    ./ltp_decide_standard.pl config/summary.base $KERNEL_SCRIPTS/ltp/test/logs/summary.new
    if [ $? == 1 ] ; then
      echo "ltp test fail"
      echo "LTP Test ............[FAIL]" >> ltp_test_log
    else
      echo "ltp test pass"
      echo "LTP Test ............[FAIL]" >> ltp_test_log
    fi
  
    cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.ltp_${ltp_suf[i]}
    echo "ltp copy linux.ltp done"
    cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.ltp_${ltp_suf[i]}
    echo "ltp copy config.ltp done"
    cp $KERNEL_SCRIPTS/ltp/build_ltp_kernel_log $THIS_LOG/build_ltp_kernel_log_${ltp_suf[i]}
    echo "ltp copy build_ltp_kernel_log done"
    cp $KERNEL_SCRIPTS/ltp/test/logs/summary.new $THIS_LOG/ltp-summary_test_log_${ltp_suf[i]}
    echo "ltp copy summary done"
    cp $KERNEL_SCRIPTS/ltp/test/logs/detailed.new $THIS_LOG/ltp-detailed_test_log_${ltp_suf[i]}
    echo "ltp copy detailed done"
    cp $KERNEL_SCRIPTS/ltp/build_ltp_log $THIS_LOG/build_ltp_log_${ltp_suf[i]}
    cp $KERNEL_SCRIPTS/ltp/ltp_test_log $THIS_LOG/ltp_test_log_${ltp_suf[i]}
    echo "copy log files done"
   
    sleep 30    
   
    if [ $RESET_BOARD -eq 1  ] ; then
     cd $KERNEL_SCRIPTS
     ./reset_board.exp   >/dev/null  2>&1       
     sleep 10
    fi
    # end, do if build kernel succeed
  fi

done

fi


  ###############################################################################################
  ########################## TEST COREB #########################################################
  
 if [ ${AUTO_RUN_STATUS[$(( n + 8 ))]} -eq 1  ] ; then
  echo  "Testing coreb..."

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/

  cd $KERNEL_SCRIPTS/coreb
  ./build_coreb_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./coreb_test.exp >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.coreb 
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.coreb
  
  cp $KERNEL_SCRIPTS/coreb/build_coreb_kernel_log $THIS_LOG
  cp $KERNEL_SCRIPTS/coreb/coreb_test_log $THIS_LOG
  
  sleep 30
 
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
  fi

  fi

  ################################################################################################
  ###########################          MANUAL TEST          ######################################
  ################################################################################################
    
for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
  do
  if [ ${MANUAL_RUN_STATUS[$i]} -eq 1  ] ; then
  
  echo  "Start testing ${MANUAL_TESTCASE[$i]}..."

  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  if [ ${MANUAL_TESTCASE[$i]} == "ndso" ] || [ ${MANUAL_TESTCASE[$i]} == "awg" ] ; then
  cd $KERNEL_SCRIPTS/spiadc
  elif [ ${MANUAL_TESTCASE[$i]} == "sport_uart" ] ; then
  cd $KERNEL_SCRIPTS/serial
  else
  cd $KERNEL_SCRIPTS/${MANUAL_TESTCASE[$i]}    
  fi
  
  if [ ${MANUAL_TESTCASE[$i]} == "i2ctwi" ] ; then
  ./build_${MANUAL_TESTCASE[$i]}_keyboard_kernel.exp $BOARD_TYPE  >/dev/null  2>&1 
  sleep 5
  ./build_${MANUAL_TESTCASE[$i]}_lcd_kernel.exp $BOARD_TYPE  >/dev/null  2>&1 
  else
  ./build_${MANUAL_TESTCASE[$i]}_kernel.exp $BOARD_TYPE  >/dev/null  2>&1  
  fi

  if [ ! -f $KERNEL_SOURCE/images/linux ]
  then
        echo "$0:       Error, failed."
	tail -50 ./build_${MANUAL_TESTCASE[$i]}_kernel_log
  fi
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.${MANUAL_TESTCASE[$i]}
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.${MANUAL_TESTCASE[$i]}
  
  if [ ${MANUAL_TESTCASE[$i]} == "ndso" ] || [ ${MANUAL_TESTCASE[$i]} == "awg" ] ; then
  cp $KERNEL_SCRIPTS/spiadc/*_log  $THIS_LOG
  elif [ ${MANUAL_TESTCASE[$i]} == "sport_uart" ] ; then
  cp $KERNEL_SCRIPTS/serial/*_log  $THIS_LOG
  else
  cp $KERNEL_SCRIPTS/${MANUAL_TESTCASE[$i]}/*_log  $THIS_LOG   
  fi
    
  echo  "End testing ${MANUAL_TESTCASE[$i]}..."
  fi
  done
  
   
 
  #############################################################################################
  ########################## TEST SERIAL UART1 ################################################  
  
  if [ ${MANUAL_RUN_STATUS[$(( n + 1 ))]} -eq 1  ] ; then
  echo  "Testing serial on uart1..."
       
  rm -rf $KERNEL_PATH/uclinux-dist/linux-2.6.x
  cd $KERNEL_PATH/uclinux-dist/ 
  cp -a  $KERNEL_PATH_BAK/uclinux-dist/linux-2.6.x  .
  cp $KERNEL_PATH_BAK/uclinux-dist/config/.config config 
  cp $KERNEL_PATH_BAK/uclinux-dist/vendors/AnalogDevices/$BOARD_TYPE/Makefile vendors/AnalogDevices/$BOARD_TYPE
  rm -rf romfs/ images/
  
  cd  $KERNEL_SCRIPTS/serial
  ./build_serial_kernel.exp $BOARD_TYPE  >/dev/null  2>&1
  sleep 30
  ./serial_uart1_test.exp /dev/ttyS1 >/dev/null  2>&1
  
  cp $KERNEL_SOURCE/images/linux $THIS_LOG/linux.serial_uart1
  cp $KERNEL_SOURCE/linux-2.6.x/.config $THIS_LOG/config.serial_uart1
  cp $KERNEL_SCRIPTS/serial/build_serial_kernel_log  $THIS_LOG
  cp $KERNEL_SCRIPTS/serial/serial_uart1_test_log $THIS_LOG/
  
  sleep 30
    
  if [ $RESET_BOARD -eq 1  ] ; then
   cd $KERNEL_SCRIPTS
   ./reset_board.exp  >/dev/null  2>&1 
   sleep 10
   
 fi
 fi

echo  "Testing Done."
