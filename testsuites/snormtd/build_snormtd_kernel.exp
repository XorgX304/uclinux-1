#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set HAVE_JFFS2_IMAGE 1

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Compiled-in Kernel Boot Parameter.*BOOTPARAM.*\\\[.*]" {
            send "N\r"
        }

        -re "Initial RAM filesystem and RAM disk.*initramfs/initrd.*support.*BLK_DEV_INITRD.*\\\[.*]" {
            send "N\r"
        }

        -re "Memory Technology Device .*MTD.* support.*MTD.*\\\[.*]" {
            send "Y\r"
        }

#        -re "MTD partitioning support.*MTD_PARTITIONS.*\\\[.*]" {
#            send "Y\r"
#        }

        -re "Direct char device access to MTD devices.*MTD_CHAR.*\\\[.*]" {
            send "Y\r"
        }

        -re "Caching block device access to MTD devices.*MTD_BLOCK.*\\\[.*]" {
            send "Y\r"
        }

        -re "Detect non-CFI AMD/JEDEC-compatible flash chips.*MTD_JEDECPROBE.*\\\[.*]" {
            send "Y\r"
        }

        -re "Flash chip driver advanced configuration options.*MTD_CFI_ADV_OPTIONS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Specific CFI Flash geometry selection.*MTD_CFI_GEOMETRY.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support 16-bit buswidth.*MTD_MAP_BANK_WIDTH_2.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support 4-chip flash interleave.*MTD_CFI_I4.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for ST .*Advanced Architecture.* flash chips.*MTD_CFI_STAA.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for RAM chips in bus mapping.*MTD_RAM.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for ROM chips in bus mapping.*MTD_ROM.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support non-linear mappings of flash chips.*MTD_COMPLEX_MAPPINGS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Generic uClinux RAM/ROM filesystem support.*MTD_UCLINUX.*\\\[.*]" {
            send "N\r"
        }

        -re "Support for M25 SPI Flash.*MTD_M25P80.*\\\[.*]" {
            send "Y\r"
        }

        -re "Journalling Flash File System v2.*JFFS2.*support.*JFFS2_FS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Generic input layer.*needed for keyboard, mouse.*INPUT.*\\\[.*]" {
            send "N\r"
        }

        -re "Second extended fs support.*EXT2_FS.*\\\[.*]" {
            send "M\r"
        }

        -re "Support for frame buffer devices.*FB.*\\\[.*]" {
            send "N\r"
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "N\r"
        }
###################################################################################
###################################################################################

        -re "mtd-utils.*USER_MTDUTILS.*\\\[.*]" {
            send "Y\r"
        }

        -re "eraseall.*USER_MTDUTILS_ERASEALL.*\\\[.*]" {
            send "Y\r"
        }

        -re "mkfs.jff2.*USER_MTDUTILS_MKFSJFFS2.*\\\[.*]" {
            send "Y\r"
        }

#Default to select it, no other choice
#        -re "Build libZ.*LIB_ZLIB.*\\\[.*]" {
#            send "N\r"
#        }
#        -re "Build libpng.*LIB_LIBPNG.*\\\[.*]" {
#            send "N\r"
#        }
#        -re "Build libjpeg.*LIB_LIBJPEG.*\\\[.*]" {
#            send "N\r"
#        }

        -re "Build ncurses.*LIB_NCURSES.*\\\[.*]" {
            send "N\r"
        }

        -re "boa.*USER_BOA_SRC_BOA.*\\\[.*]" {
            send "N\r"
        }

        -re "dhrystone.*USER_DHRYSTONE_DHRYSTONE.*\\\[.*]" {
            send "N\r"
        }

        -re "whetstone.*USER_WHETSTONE_WHETSTONE.*\\\[.*]" {
            send "N\r"
        }

#no such choice
#        -re "Sqlite.*a light weight database.*CONFIG_USER_SQLITE.*\\\[.*]" {
#            send "N\r"
#        }

        -re "VIDEO test program.*USER_BLACKFIN_VIDEOTEST.*\\\[.*]" {
            send "N\r"
        }

        -re "TWI LCD test program.*USER_BLACKFIN_TWILCDTEST.*\\\[.*]" {
            send "N\r"
        }

        -re "netperf test tool.*USER_NETPERF_TEST.*\\\[.*]" {
            send "N\r"
        }

        -re "strace.*USER_STRACE_STRACE.*\\\[.*]" {
            send "N\r"
        }

        -re "jpegview.*USER_JPEGVIEW_JPEGVIEW.*\\\[.*]" {
            send "N\r"
        }

        -re "ftp.*USER_FTP_FTP_FTP.*\\\[.*]" {
            send "N\r"
        }

        -re "mp3play.*USER_MP3PLAY_MP3PLAY.*\\\[.*]" {
            send "N\r"
        }

        -re "vplay.*USER_VPLAY_VPLAY.*\\\[.*]" {
            send "N\r"
        }

        -re "vrec.*USER_VPLAY_VREC.*\\\[.*]" {
            send "N\r"
        }

        -re "gdbserver.*USER_GDB.*\\\[.*]" {
            send "N\r"
        }

        -re "Install ELF shared libraries.*INSTALL_ELF_SHARED_LIBS.*\\\[.*]" {
            send  "N\r"
        }

        -re "Install FLAT shared libraries.*INSTALL_FLAT_SHARED_LIBS.*\\\[.*]" {
            send  "N\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
