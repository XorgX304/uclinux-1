#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	        
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             
             send "y\r"
      }

 

       -re "Compiled-in Kernel Boot Parameter.*BOOTPARAM.*\\\[.*]" {
             
             send "N\r"
      }

        -re "Memory Technology Device .*MTD.* support.*MTD.*\\\[.*]" {
             
             send "Y\r"
      }

   #     -re "MTD partitioning support.*MTD_PARTITIONS.*\\\[.*]" {
   #          
   #          send "Y\r"
   #   }
    
        -re "Direct char device access to MTD devices.*MTD_CHAR.*\\\[.*]" {
             
             send "Y\r"
      }

         -re "Caching block device access to MTD devices.*MTD_BLOCK.*\\\[.*]" {
             
             send "Y\r"
      }

      

        -re "Detect non-CFI AMD/JEDEC-compatible flash chips.*MTD_JEDECPROBE.*\\\[.*]" {
             
             send "Y\r"
      }

        -re "Flash chip driver advanced configuration options.*MTD_CFI_ADV_OPTIONS.*\\\[.*]" {
             
             send "Y\r"
      }

        -re "Specific CFI Flash geometry selection.*MTD_CFI_GEOMETRY.*\\\[.*]" {
             
             send "Y\r"
      }

        -re "Support 16-bit buswidth.*MTD_MAP_BANK_WIDTH_2.*\\\[.*]" {
             
             send "Y\r"
      }
     
        -re "Support 4-chip flash interleave.*MTD_CFI_I4.*\\\[.*]" {
             
             send "Y\r"
      }

    
       -re "Support for ST .*Advanced Architecture.* flash chips.*MTD_CFI_STAA.*\\\[.*]" {
             
             send "Y\r"
      }

       	-re "Support for RAM chips in bus mapping.*MTD_RAM.*\\\[.*]" {
             
             send "Y\r"
      }

        -re "Support for ROM chips in bus mapping.*MTD_ROM.*\\\[.*]" {
             
             send "Y\r"
      }
     

      	 -re "Support non-linear mappings of flash chips.*MTD_COMPLEX_MAPPINGS.*\\\[.*]" {
             
             send "Y\r"
      }
 
 	-re "Generic uClinux RAM/ROM filesystem support.*MTD_UCLINUX.*\\\[.*]" {
             
             send "Y\r"
      }

      
       -re "Support for M25 SPI Flash.*MTD_M25P80.*\\\[.*]" {
             
             send "Y\r"
      }

       -re "Journalling Flash File System v2.*JFFS2.*support.*JFFS2_FS.*\\\[.*]" {

             send "Y\r"
      }
       
       -re "Second extended fs support.*EXT2_FS.*\\\[.*]" {
             send  "Y\r"
      }

       -re "Support for frame buffer devices.*FB.*\\\[.*]" {
             send "N\r"
      }
      
       	   -re "Sound card support.*SOUND.*\\\[.*]" {
             send "N\r"
      }
     ###################################################################################
     ###################################################################################
     
          -re "mtd-utils.*CONFIG_USER_MTDUTILS.*\\\[.*]" {
             
             send "Y\r"
      }
      
          -re "eraseall.*CONFIG_USER_MTDUTILS_ERASEALL.*\\\[.*]" {
             
             send "Y\r"
      }
      
          -re "mkfs.jff2.*CONFIG_USER_MTDUTILS_MKFSJFFS2.*\\\[.*]" {
             
             send "Y\r"
      }
      
 	      
           -re "Build libZ.*CONFIG_LIB_ZLIB_FORCE.*\\\[.*]" {
             send "N\r"
      }
      
       	  -re "Build libpng.*CONFIG_LIB_LIBPNG_FORCE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "Build libjpeg.*CONFIG_LIB_LIBJPEG_FORCE.*\\\[.*]" {
             send "N\r"
      }
     
      	  -re "Build ncurses.*CONFIG_LIB_NCURSES_FORCE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "Build libbfdsp.*CONFIG_LIB_LIBBFDSP.*\\\[.*]" {
             send "N\r"
      }
     
          -re "boa-new.*CONFIG_USER_BOA_SRC_BOA_NEW.*\\\[.*]" {
             send "N\r"
      }
 	  
	  -re "dhrystone.*CONFIG_USER_DHRYSTONE_DHRYSTONE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "whetstone.*CONFIG_USER_WHETSTONE_WHETSTONE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "Sqlite.*a light weight database.*CONFIG_USER_SQLITE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "VIDEO test program.*CONFIG_USER_BLACKFIN_VIDEOTEST.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "TWI LCD test program.*CONFIG_USER_BLACKFIN_TWILCDTEST.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "netperf test tool.*CONFIG_USER_NETPERF_TEST.*\\\[.*]" {
             send "N\r"
      }

      	  -re "strace.*CONFIG_USER_BLACKFIN_STRACE.*\\\[.*]" {
             send "N\r"
      }
      
      	  -re "jpegview.*CONFIG_USER_JPEGVIEW.*\\\[.*]" {
             send "N\r"
      }
           
      
       "\\\(*) \\\[*]" {
             sleep .001
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
      }
   }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

step "Copy linux"

source   copy_image.exp
 
send_user "Ending $argv0\n"
log_file
 


