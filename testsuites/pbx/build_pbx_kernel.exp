#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

step "Apply pound patch."

cd $uclinux_path/lib/
exec rm -rf $uclinux_path/lib/libssl
catch {exec tar zxf $user/openssl-0.9.8c.tar.gz}
exec patch -p0 < ../bfin_patch/libssl_patch/libssl_bfin.patch
exec mv openssl-0.9.8c libssl

step "Change config file in /vender folder."

cd $uclinux_path
sleep 3
 set timeout 2
      spawn ex vendors/AnalogDevices/$board_type/Makefile
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/BLOCKS\r"
      expect "BLOCKS*="
      send "d\r"
      expect ":"
      send "i\r"
      sleep .5
      send "BLOCKS = 16384\r"
      sleep .5
      send ".\r"
      expect ":"
      send "wq\r"
      expect eof



cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             send "y\r"
      }

          -re "PBX support.*PBX.*\\\[.*]" {
             send "y\r"
      }

          -re "Asterisk PBX.*CONFIG_USER_BLACKFIN_ASTERISK.*\\\[.*]" {
             send "y\r"
      }


          -re "Build libSSL.*CONFIG_LIB_LIBSSL_FORCE.*\\\[.*]" {
             send "y\r"
      }

          -re "Build libZ.*CONFIG_LIB_ZLIB_FORCE.*\\\[.*]" {
             send "y\r"
      }

          -re "Build ncurses.*CONFIG_LIB_NCURSES_FORCE.*\\\[.*]" {
             send "y\r"
      }

       "\\\(*) \\\[*]" {
             sleep .01
             send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
      }
   }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
 


