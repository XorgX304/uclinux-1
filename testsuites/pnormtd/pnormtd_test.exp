#!/usr/bin/expect
#

source ../kernel_config.exp
source ../board_info.exp

log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

if { $board_type == "BF537-STAMP" || $board_type == "BF533-STAMP" } {

set bootargs  $bootargs_param1

} elseif { $board_type == "BF561-EZKIT" } {

set bootargs  $bootargs_param1

} elseif { $board_type == "BF548-EZKIT" } {

set bootargs  $bootargs_param6
}

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
send -s "set bootargs $bootargs\r"
source ../reboot_kernel.exp

set TEST_PASS               "pass"
set TEST_FAIL               "fail"

step "MTD test"

set case_num 0

incr case_num

set timeout 5
set mtd_temp_result $TEST_FAIL
set mtd_result $TEST_FAIL
#send -s "\r"
send -s "cat /proc/mtd \r"
while 1 {
    expect {

	"mtd2" {
		set mtd_temp_result $TEST_PASS
                case_pass $case_num
	}

	 "root:~>" {
                break
        }


	timeout {
                case_fail $case_num
		exit
	}
    }
}

if { $mtd_temp_result!=$TEST_PASS } {
	exit
}
sleep 1

incr case_num

step "Erase MTD "
set mtd_temp_result $TEST_FAIL
set timeout 180
send -s "eraseall /dev/mtd2\r"
while 1 {
    expect {
	
	"root:~>" {
		set mtd_temp_result $TEST_PASS
                case_pass $case_num
		break
	}

	timeout {
                case_fail $case_num
		exit
	}
    }
}

if  { $mtd_temp_result!=$TEST_PASS } {
	exit
}


step "Make jffs2 image"

send_log " \n1)create file system directory\n"
send -s "mkdir -p rootfs\r"
expect ">"
send_log " \n2)create test file\n"
send -s "echo This is test for mtd driver > rootfs/test\r"
expect "root:~>"
send_log " \n3)create JFFS2 image\n"
send -s "mkfs.jffs2 -r rootfs -o mtd.img\r"
expect ">"

incr case_num

step "Writing MTD"
set mtd_temp_result $TEST_FAIL
set timeout 60
send -s "cp mtd.img /dev/mtd2\r"
while 1 {
    expect {
	
	"root:~>" {
		set mtd_temp_result $TEST_PASS
                case_pass $case_num
		break
	}
	
	timeout {
                case_fail $case_num
		exit
	}
    }
}

if  { $mtd_temp_result!=$TEST_PASS } {
        exit
}

incr case_num

step "Reading MTD "	
set mtd_temp_result $TEST_FAIL
set timeout 60
send -s "mount -t jffs2 /dev/mtdblock2 /mnt\n"
while 1 {
    expect {
                                                                                                                                                             
        "root:~>" {
                set mtd_temp_result $TEST_PASS
                case_pass $case_num
		break
        }
                                                                                                                                                             
        timeout {
                case_fail $case_num
		exit
        }
    }
}
                                                                                                                                                             
if  { $mtd_temp_result!=$TEST_PASS } {
        exit
}

incr case_num

step "Verify "
set timeout 2
send -s "cmp /rootfs/test /mnt/test\r"
while 1 {
    expect {
	
	"differ" {
                case_fail $case_num
		exit
	}

	"No such file or directory" {
                case_fail $case_num
		exit
	}

	timeout {
		set mtd_results $TEST_PASS
                case_pass $case_num
		break
	}
    }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file
 
