#!/usr/bin/expect --

#
# Build Kernel for BF548-EZKIT and BF527-EZKIT USB device test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Virtual terminal.*VT.*\\\[.*]" {
            send "n\r"
        }

        -re "USB support.*USB_SUPPORT.*\\\[.*]" {
            send "y\r"
        }

        -re "Support for Host-side USB.*USB.*\\\[.*]" {
            send "y\r"
        }

        -re "USB device filesystem.*USB_DEVICEFS.*\\\[.*]" {
            send "y\r"
        }

        -re "USB device class-devices.*USB_DEVICE_CLASS.*\\\[.*]" {
            send "y\r"
        }

        -re "USB Gadget Support.*USB_GADGET.*\\\[.*]" {
            send "y\r"
        }

        -re "USB Gadget Drivers \\\[.*]" {
            send "m\r"
        }

        -re "USB testing driver.*USB_TEST.*\\\[.*]" {
            send "m\r"
        }

        "\\\(*) \\\[*]" {
            sleep .1
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path
set timeout 300
spawn make config
while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "n\r"
        }

        -re "Inventra Highspeed Dual Role Controller.*USB_MUSB_HDRC.*\\\[.*]" {
            send "y\r"
        }

        -re "Driver Mode.*USB Host.*USB Peripheral.*USB_MUSB_PERIPHERAL.*\[cC]hoice\\\[.*]:" {
            send "2\r"
        }

        -re "Logging Level.*USB_MUSB_LOGLEVEL.*\\\[.*]" {
            send "0\r"
        }

        -re "USB Peripheral Controller.*Inventra HDRC USB.*USB_GADGET_MUSB_HDRC.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "3\r"
            } elseif { $board_type == "BF527-EZKIT" } {
                send "2\r"
            }
        }

        -re "USB Gadget Drivers \\\[.*]" {
            send "m\r"
        }

        -re "Gadget Zero.*USB_ZERO.*\\\[.*]" {
            send "m\r"
        }

        -re "Ethernet Gadget.*USB_ETH.*\\\[.*]" {
            send "m\r"
        }

        -re "RNDIS support.*USB_ETH_RNDIS.*\\\[.*]" {
            send "y\r"
        }

        -re "Gadget Filesystem.*USB_GADGETFS.*\\\[.*]" {
            send "m\r"
        }

        -re "File-backed Storage Gadget \\\(USB_FILE_STORAGE.*\\\[.*]" {
            send "m\r"
        }

        -re "File-backed Storage Gadget.*USB_FILE_STORAGE_TEST.*\\\[.*]" {
            send "y\r"
        }

        -re "Serial Gadget.*USB_G_SERIAL.*\\\[.*]" {
            send "m\r"
        }

        -re "MIDI Gadget.*USB_MIDI_GADGET.*\\\[.*]" {
            send "m\r"
        }

        "\\\(*) \\\[*]" {
            sleep .1
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
