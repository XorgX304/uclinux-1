#!/usr/bin/expect
log_file build_serial_port_kernel_log
send_user "Starting build_serial_port_kernel.exp\n"

set user /home/test
set uclinux_path $user/checkouts/kernel/uClinux-dist
set dxe_filename linux
set ttydev /dev/ttyS0

set board_type [lindex $argv 0]
send_log "\n#### board_type is $board_type\n"

if { $argc < 1} {
puts "Please input: board_type."
exit
}

if { $argc >= 2} {
   set uclinux_path       [lindex $argv 1]
   send_log "\n#### uclinux_path is $uclinux_path\n"
}

proc step { message } {

  global step_sequence_number

  puts "\n*******************************************************************"
  puts "STEP $step_sequence_number: $message\n\n"
  send_log "\n************** STEP $step_sequence_number: $message\n\n"
  incr step_sequence_number
}

set step_sequence_number    1

step "Make config."

cd $uclinux_path
set timeout 300
spawn make config

#puts "Begin the interactive process of configuration"
#puts "ON THE FIRST PASS, DON'T EVEN TRY TO SET ANYTHING: BUG WORKAROUND"
while 1 {
   expect {
     -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
             send "$board_type\r"
      }

      "\\\(*) \\\[*]" {
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
             break
      }
   }
}

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             send "y\r"
      }
             
	   -re "Blackfin serial port support.*SERIAL_BFIN.*\\\[.*]" {
             send "y\r"
      }

          -re "Console on Blackfin serial port.*SERIAL_BFIN_CONSOLE.*\\\[.*]" {
             send "y\r"
      }
      
         -re "Blackfin UART Mode.*Blackfin UART DMA mode.*SERIAL_BFIN_DMA.*Blackfin UART PIO mode.*SERIAL_BFIN_PIO.*choice.*\\\[.*]" {
             send "1\r"
      }
      
   #      -re "Enable hardware flow control.*SERIAL_BFIN_CTSRTS.*\\\[.*]" {
   #          send "y\r"
   #   }
      
         -re "Blackfin Serial Driver.*SERIAL_BLACKFIN.*\\\[.*]" {
             send "n\r"
      }
         
         -re "RTS/CTS test program.*CONFIG_USER_BLACKFIN_RTSCTSTEST.*\\\[.*]" {
             send "y\r"
      }

       "\\\(*) \\\[*]" {
             sleep .001
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
           
      }
   }
}

step "Make"

cd $uclinux_path
spawn make
set timeout 1200
set bfin_make_status failure
while 1 {
      expect {
	     "Entering directory" { }
	     "Leaving directory" { set bfin_make_status success }
	     "Error" {set bfin_make_status failure }
	     "/bin/sh" { }
	     eof { break }
      }
}

if { $bfin_make_status == "failure" } {
      puts "ERROR: Error somewhere during make"

}    

step "Copy linux"
  
set timeout 8
cd $uclinux_path
exec cp images/linux  /tftpboot

log_file

send_user "Ending build_serial_port_kernel.exp\n"




 
