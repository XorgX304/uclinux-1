#!/usr/bin/expect
#
#Test program to test the serial driver.
#

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

set STRDATA "abcdefghijklmnopqrstuvwxyz0123456789"

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

step "Start $TITLE"

set case_num 0

incr case_num
set timeout 30
send -s "$STRDATA\r"
while 1 {
   expect {
	"> " {
		send_log "\nCase $case_num ...PASS\n"
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

incr case_num
while 1 {
   set timeout 5
   send -s "\3"
   expect {
	"> " {
		send_log "\nCase $case_num ...PASS\n"
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

incr case_num
while 1 {
   set timeout 5
   send -s "ls\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...PASS\n"
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

incr case_num
while 1 {
   set timeout 5
   send -s "dmesg\n"
   send -s "dmesg\n"
   send -s "dmesg\n"
   send -s "cat proc/slabinfo\n"
   expect {
	"slabinfo - version" {
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

while 1 {
   expect {
	"> " {
		send_log "\nCase $case_num ...PASS\n"
		break
	}
         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

incr case_num
while 1 {
   set timeout 5
   send -s "cat proc/kallsyms\n"
   expect {
	"start" {
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

while 1 {
   sleep 1
   send -s "\3"
   expect {
	"> " {
		send_log "\nCase $case_num ...PASS\n"
		break
	}
         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}


incr case_num
set timeout 30
for {set i 0} {$i<100} {incr i} {
   send "$STRDATA\n"
}
send -s "====================================\n"

while 1 {
   expect {
	"=========: not found" {
		send_log "\nCase $case_num ...PASS\n"
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

incr case_num
while 1 {
   set timeout 5
   send -s "vi\n"
   expect {
	"line 1 of 1" {
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

while 1 {
   set timeout 30
   send -s "i"
   send -s "adskf\n"
   send -s "werigji\n"
   send -s "werigji\n"
   send -s "werigji\n"
   send -s "werigji\n"
   send -s "werigji\n"
   send -s "werigji\n"
   for {set i 0} {$i<100} {incr i} {
      send -s "x"
      expect {
	"x" {
	}
         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
      }
   }
   send -s "a\n"
   send -s "b\n"
   send -s "c\n"
   send -s "d\n"
   send -s "e\n"
   send -s "f\n"
   send -s "\n"
   send -s "$STRDATA"
   send -s "$STRDATA"
   send -s "$STRDATA"
   send -s "$STRDATA\n"
   for {set i 0} {$i<100} {incr i} {
      send "$STRDATA\n"
   }
   send -s "===================================#"
   expect {
	"#" {
		sleep 2
		send -s "\033"
		sleep 2
		send -s ":q!\n"
		sleep 2
		send -s "\n"
		send_log "\nCase $case_num ...PASS\n"
		break
	}

         timeout {
		send_log "\nCase $case_num ...FAIL\n"
		send_log "$TITLE ............\[FAIL\]\n"
		exit
         }
   }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file

