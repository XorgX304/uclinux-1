#!/usr/bin/expect

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]


step "Start kermit."
source ../spawn_kermit.exp

step  "Reboot the kernel." 
source ../reboot_kernel.exp

step "Start testing."

set case_num 0

incr case_num

set timeout 8
set flag 0

send "cd /bin\r" 
while 1 {
   expect {
      "bin" {        
         break
      }

      timeout {                   
            break
         }
     }
}

set timeout 20
set flag 0
set num 0

send -s  "./ad9960_test read 16\r" 
while 1 {
   expect {
   
      "Found Q" {                  
	        
	        for {set i 23} {$i < 1023} {incr i} {
			
			expect {
			-re "$i: Q_hw:\[\x20\t]+(\[a-z0-9]+)\[ \t]+Q_sw:\[ \t]+(\[a-z0-9]+)\[\r\n]" {
				set flag 1
				
			}
			
			-re "$i: I_hw:\[\x20\t]+(\[a-z0-9]+)\[ \t]+I_sw:\[ \t]+(\[a-z0-9]+)\[\r\n]" {
				set flag 1
				
			}
			 timeout {				
				send_log "\nCase $case_num ...FAIL\n"
				send_log "$TITLE ............\[FAIL\]\n"
				exit
				}
			}			
			
			if { $flag == 1 } {				
				if { $expect_out(1,string) == $expect_out(2,string)} {
					set num [expr $num + 1]	
				} else {
				puts "\n FAIL: $i $expect_out(1,string) $expect_out(2,string).\n"
				}
				set flag 0
			} 
			}
			
		if { $num == 1000 } {
		puts "\nad9960 test success.\n"
		send_log "\nCase $case_num ...PASS\n"
		break
		}
	 
        
      }    

     "ERROR" {
        send_log "\nCase $case_num ...FAIL\n"
	send_log "$TITLE ............\[FAIL\]\n"
	exit
         }
	 
      timeout {
        send_log "\nCase $case_num ...FAIL\n"
	send_log "$TITLE ............\[FAIL\]\n"
	exit
         }
     }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file
 



