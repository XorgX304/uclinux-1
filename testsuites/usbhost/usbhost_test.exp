#!/usr/bin/expect

# Main entrance
source  ../kernel_config.exp

log_file [log_file_name "$argv0"]

send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."

source ../reboot_kernel.exp 

set case_num 0

step "Start testing."

incr case_num
sleep 10
send "\r"
while 1 {
   expect {
      -re "Vendor.*" {
         sleep 2
         send "\r"
         break
      }
      timeout {
         send "\r"
         break
      }
   }
}
sleep 2
send "\r"

step "mount on usb flash disk"
set timeout 2
send "mount -t vfat /dev/sda1 /mnt\r"
while 1 {
   expect {
      -re "root:~>" {
         send_log "\nmount on usb flash disk done\n"
         send_user "\nmount on usb flash disk done\n"
         break
      }

      -re ".*failed" {
         case_fail $case_num
      }

      timeout {
         send_log "\nmount on usb flash disk timeout\n"
         send_user "\nmount on usb flash disk timeout\n"
         break
      }
   }
}

step "check mount result"
send "mount\r"
set timeout 5
while 1 {
   expect {
      -re "/dev/sda1 on /mnt type vfat.*" {
         send_log "\nmount on usb flash disk succeeds\n"
         case_pass $case_num
         break
      }
      timeout {
         case_fail $case_num
      }
   }
}

incr case_num
step "creat file"
send "echo teststring > usbhost_testfile\r"
send "cat usbhost_testfile\r"
while 1 {
   expect {
      -re "teststring" {
         send "\r"
         case_pass $case_num
         break
      }

      timeout {
         case_fail $case_num
      }
   }
}

incr case_num
step "delete file"
send "rm usbhost_testfile\r"
expect "root:>"
send "\r"
send "ls /mnt/usbhost_testfile\r"
set timeout 2
while 1 {
   expect {

      -re ".*No such file or directory" {
         case_pass $case_num
         break
      }

      timeout {
         case_fail $case_num
      }
   }
}

incr case_num
send "umount /mnt\r"
while 1 {
   expect {
      -re "root:~>" {
         break
      }
      timeout {
         send_log "\numount timeout\n"
         case_fail $case_num
      }
   }
}

send "mount\r"
while 1 {
   expect {
      -re "/dev/sda1 on /mnt type vfat.*" {
         send_log "Test failed, umount failed"
         case_fail $case_num
      }
      -re "root:~>" {
         case_pass $case_num
         break
      }
      timeout {
         send_log "umount timeout"
         break
      }
   }
}

all_pass

send_user "Ending $argv0\n"

log_file
