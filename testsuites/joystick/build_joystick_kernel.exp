#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             send "y\r"
      }

         # Select BF537/6/4 default GPIO PFx PORTG (BF537_PORT_G)
          -re "Select BF537/6/4 default GPIO PFx PORTx.*choice\\\[.*]" {
                       send "2\r"
            
      }
 
           -re "I2C support.*I2C\[^_].*\\\[.*]" {             
             send "Y\r"
      }

      	   -re "I2C device interface.*I2C_CHARDEV.*\\\[.*]" {            
             send "Y\r"
      }
           	     
      	   -re "Blackfin TWI I2C support.*I2C_BFIN_TWI.*\\\[.*]" {   
	     if { $board_type == "BF537-STAMP" } {             
             		send "Y\r"
	     } else {
	     		send "\r"
	     }	             
      }
      
      	   -re "TWI clock.*TWICLK_KHZ.*\\\[.*]" {   
	     if { $board_type == "BF537-STAMP" } {             
             		send "50\r"
	     } else {
	     		send "\r"
	     }	             
      }
      
      
      	   -re "Generic input layer.*\\\[.*]" {            
             send "Y\r"
      }
      
           -re "Mouse interface.*INPUT_MOUSEDEV.*\\\[.*]" {            
             send "N\r"
      }
      
           -re "Joystick interface.*INPUT_JOYDEV.*\\\[.*]" {            
             send "Y\r"
      }
         	   
  	   -re "Event interface.*INPUT_EVDEV.*\\\[.*]" {            
             send "Y\r"
      }
         	 
	   -re "Keyboards.*INPUT_KEYBOARD.*\\\[.*]" {            
             send "N\r"
      }
  
    	   -re "Mouse.*INPUT_MOUSE.*\\\[.*]" {            
             send "N\r"
      }
           
      	   -re "Joysticks.*INPUT_JOYSTICK.*\\\[.*]" {            
             send "Y\r"
      }
      	   -re "Analog Devices AD7142 Joystick support.*JOYSTICK_AD7142.*\\\[.*]" {            
             send "m\r"
      }
      
      	   -re "Input event device test.*CONFIG_EVENT_TEST.*\\\[.*]" {            
             send "Y\r"
      }
       
      
       "\\\(*) \\\[*]" {
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
      }
   }
}


cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp
 
send_user "Ending $argv0\n"
log_file
 


