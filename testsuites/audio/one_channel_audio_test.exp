#!/usr/bin/expect

#
#Test program to test the audio driver.
#

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

send_log "*********************************\r"
send_log "Start $TITLE\r"
send_log "*********************************\r"

spawn plaympeg -l audiotest.mp3
set plaympeg_id $spawn_id

set spawn_id $kermit_spawn_id 

set case_num 0

send_log "\nPlease listen to the earphone or amplifier.\n\n"

sleep 3

while 1 {
   set timeout 10
   incr case_num
   send -s "vrec -w -S -b 16 -s 44100 -t 4 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -S -b 16 -s 22000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -S -b 16 -s 11000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -S -b 16 -s 8000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -S -b 8 -s 44100 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -S -b 8 -s 8000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -b 16 -s 44100 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -b 16 -s 11000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   incr case_num
   send -s "vrec -w -b 8 -s 22000 -t 6 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa\n"
   expect {
	"> " {
		send_log "\nCase $case_num ...DONE\n"
	}

         timeout {
                case_fail $case_num
		exit
         }
   }

   send_log "Finally, test play and record audio concurrently...\n"
   sleep 1
   set timeout 10

   send -s "\n"
   expect {
	"> " {
	}
   }

   incr case_num
   send -s "vrec -w -S -b 16 -s 8000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }

   sleep 1
   incr case_num
   send -s "vrec -w -S -b 16 -s 48000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   
   sleep 1
   incr case_num
   send -s "vrec -w -b 16 -s 8000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   
   sleep 1
   incr case_num
   send -s "vrec -w -b 16 -s 48000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   
   sleep 1
   incr case_num
   send -s "vrec -w -b 8 -s 8000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }

   sleep 1
   incr case_num
   send -s "vrec -w -b 8 -s 48000 -t 6|vplay\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }

   sleep 1
   incr case_num
   send -s "vrec -w -b 16 -s 11000 -t 8 aaa\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vplay aaa &\n"
   expect {
	"Playing WAVE" {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }

   send -s "\n"
   expect {
	"> " {
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
   send -s "vrec -w -b 16 -s 11000 -t 4 bbb\n"
   expect {
	"> " {
	}
	
         timeout {
                case_fail $case_num
		exit
         }
   }

   sleep 5
   expect {
	"Input/output error" {
                case_fail $case_num
		exit
	}
	
	timeout {
		send_log "\nCase $case_num ...DONE\n"
		break;
	}
   }
}

set spawn_id $plaympeg_id
send "\3"
sleep 1

send_log "\n$TITLE ............DONE\n"

send_user "Ending $argv0\n"
log_file
 
