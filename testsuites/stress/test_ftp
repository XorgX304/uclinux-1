#!/usr/bin/expect

set targetip 10.100.4.2
if { $argc >= 1} {
   set targetip           [lindex $argv 0]
}

spawn /bin/sh

while (1) {
	send "ftp $targetip\r"
	expect {
		"root):" { }
	        timeout { send_user "Failed first return\n"
			break }
	}
	send "\r"
	expect {
	        "Password:" { }
	        timeout { send_user "Failed first return\n"
			break }
	}
	send "uClinux\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }

	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "put ftp_load\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }
	send "get ftp_load ftp_load1\r"
        expect {
                "ftp>" { }
                timeout { send_user "Failed first return\n"
                        break }
        }

	send "bye\r"
	sleep 2
}
