#!/usr/bin/expect

source  ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set set_config_file 1

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

if { $set_config_file == 1 } {

send_log "\n\n#### Set config under $uclinux_path/linux-2.6.x folder.\n\n"

cd $uclinux_path/linux-2.6.x
sleep 3
 set timeout 2
      spawn ex .config
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/CONFIG_BLACKFIN_DPMC\[ =]\r"
      expect "CONFIG_BLACKFIN_DPMC\[ =]"
      send "d\r"
      sleep .5
      expect ":"
      send "i\r"
      sleep .5
      send "CONFIG_BLACKFIN_DPMC=y\r"      
      send ".\r"      
      expect ":"
      sleep .5
      
      send "wq\r"
      expect eof

send_log "\n\n#### Set config under $uclinux_path/config folder.\n\n"

cd $uclinux_path/config
sleep 3
 set timeout 2
      spawn ex .config
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/CONFIG_USER_BLACKFIN_DPMC\[ =]\r"
      expect "CONFIG_USER_BLACKFIN_DPMC\[ =]"
      send "d\r"
      sleep .5
      expect ":"
      send "i\r"
      sleep .5
      send "CONFIG_USER_BLACKFIN_DPMC=y\r"      
      send ".\r"      
      expect ":"
      sleep .5   
       
      send "wq\r"
      expect eof
      
      
cd $uclinux_path
set timeout 300
spawn make config

while 1 {
   expect {

       -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
            
             send "$board_type\r"
      }

      "\\\(*) \\\[*]" {
             send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
             puts "End of configuration"
             break
      }
      timeout {
             puts "\n\nFATAL ERROR: config prompt timeout in make config"
	     break

      }
   }
}
} else {

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
      -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
         send "$board_type\r"
      } 
   
      -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
         send "y\r"
      }

      -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
         send "y\r"
      }

      -re "Blackfin Power Management support.*BLACKFIN_DPMC.*\\\[.*]" {
         send -s "y\r"
      }

      -re "DPMC test program.*CONFIG_USER_BLACKFIN_DPMC.*\\\[.*]" {
         send -s "y\r"
      }

      "\\\(*) \\\[*]" {
         send "\r"
      }

     
      -re "\[cC]hoice\\\[.*]:" {
         send "\r"
      }

      eof {
         puts "End of configuration"
         break
      }
      timeout {
         puts "\n\nFATAL ERROR: config prompt timeout in make config"
	 break
      }
   }
}
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
 
