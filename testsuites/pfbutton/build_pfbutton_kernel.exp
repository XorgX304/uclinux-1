#!/usr/bin/expect

source  ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set set_config_file 0

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp
if { $set_config_file == 1 } {
# Following make specific configuration for this case.

step "Apply ppifcd config patch."

cd $uclinux_path/linux-2.6.x

exec patch -p1 < ../testsuites/pfbutton/pfbutton_config_patch

send_log "\n\n#### Set config under $uclinux_path/config folder.\n\n"

cd $uclinux_path/config
sleep 3
 set timeout 2
      spawn ex .config
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/CONFIG_USER_BLACKFIN_PFBUTTONS\[ =]\r"
      expect "CONFIG_USER_BLACKFIN_PFBUTTONS\[ =]"
      send "d\r"
      sleep .5
      expect ":"
      send "i\r"
      sleep .5
      send "CONFIG_USER_BLACKFIN_PFBUTTONS=y\r"
      send ".\r"
      expect ":"
      sleep .5

      send "wq\r"
      expect eof

} else {
cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	        
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             
             send "y\r"
      }
        
   	
	  -re "Mouse interface.*INPUT_MOUSEDEV.*\\\[.*]" {
             
               send "y\r"
      }
    	
	-re "Provide legacy /dev/psaux device.*INPUT_MOUSEDEV_PSAUX.*\\\[.*]" {
            
		send "y\r"
     }
   
	 -re "Horizontal screen resolution.*INPUT_MOUSEDEV_SCREEN_X.*\\\[.*]" {
           
		send "1024\r"
     }
     
	-re "Vertical screen resolution.*INPUT_MOUSEDEV_SCREEN_Y.*\\\[.*]" {
          
		send "768\r"
     }
      
	-re "Event interface.*INPUT_EVDEV.*\\\[.*]" {
          
		send "y\r"
     }
   	
#	-re "Keyboards.*INPUT_KEYBOARD.*\\\[.*]" {
#
#		send "y\r"
#	}
#	
#	-re "AT keyboard.*KEYBOARD_ATKBD.*\\\[.*]" {
#
#		send "y\r"
#	}
#
#	
#	-re "Mouse.*INPUT_MOUSE.*\\\[.*]" {
#
#		send "y\r"
#	}
#
#	-re "PS/2 mouse.*MOUSE_PS2.*\\\[.*]" {
#
#		send "y\r"
#	}

	-re "Miscellaneous devices.*INPUT_MISC.*\\\[.*]" {

		send "y\r"
	}

	-re "User level driver support.*INPUT_UINPUT.*\\\[.*]" {

		send "y\r"
	}

	-re "PF buttons input device.*BF53X_PFBUTTONS.*\\\[.*]" {

		send "y\r"
	}
#
#	-re "TWI/I2C Keypad input device.*TWI_KEYPAD.*\\\[.*]" {
#	
#		send "n\r"
#	}
#
#	-re "Serial I/O support.*SERIO.*\\\[.*]" {
#
#		send "y\r"
#	}
#
#	-re "Serial port line discipline.*SERIO_SERPORT.*\\\[.*]" {
#
#		send "y\r"
#	}
#
#	-re "PS/2 driver library.*SERIO_LIBPS2.*\\\[.*]" {
#
#		send "y\r"
#	}
       
	-re "PFBUTTONS test program.*CONFIG_USER_BLACKFIN_PFBUTTONS.*\\\[.*]" {

		send "y\r"
	}
	

      -re  "\\\(.*\\\) \\\[.*]" {
             sleep .01
             send "\r"
      }
 

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
           
      }
   }
}
}
cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp
 
send_user "Ending $argv0\n"
log_file
 


