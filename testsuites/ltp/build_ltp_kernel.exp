#!/usr/bin/expect --

#
# Build Kernel for LTP test
#
source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"


# slab_slob = 1, enable slab
# slab_slob = 2, enable slob 
#
# buddy_np2 = 1, slab with buddy
# buddy_np2 = 2, slab with np2
#

if { $argc == 4 } {
   set uclinux_path [lindex $argv 1]
   set wt_wb [lindex $argv 2]
   set slab_slob [lindex $argv 3]
   send_log "\n#### uclinux_path is $uclinux_path\n"
} else {
   if { $argc == 5 } {
      set uclinux_path [lindex $argv 1]
      set wt_wb [lindex $argv 2]
      set slab_slob [lindex $argv 3]
      set buddy_np2 [lindex $argv 4]
      send_log "\n#### uclinux_path is $uclinux_path\n"
   }
}


cd $uclinux_path/testsuites

step "Make config."
source  make_default_config.exp
# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
spawn make config

#tee "Begin the interactive process of configuration"
while 1 {
   expect {

      -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP, BF561-EZKIT.*\\\[.*]" {
         send "$board_type\r"
      }

      -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
         send "y\r"
      }

      -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
         send "y\r"
      }


      -re ".*Write through \\\(BLKFIN_WT\\\).*choice\\\[1-2\\\]:.*" {
         send "$wt_wb\r"
      }

      -re "Use full SLAB allocator \\\(SLAB\\\).*\\\[././.]" {
         if { $slab_slob == 1 } {
            send "y\r"
         }
         if { $slab_slob == 2 } {
            send "n\r"
         }
      }

      -re "Page frame management algorithm.*choice\\\[.*]" {
         if { $slab_slob == 1 } {
            if { $buddy_np2 == 1 } {
               send "1\r"
            }
            if { $buddy_np2 == 2 } {
               send "2\r"
            }
         } else {
            send "1\r"
         }
      }

      -re "hostid \\\(CONFIG_USER_BUSYBOX_HOSTID\\\).*\\\[././.]" {
         send "\r"
      }

      "\\\(*) \\\[*]" {
         send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
         send "\r"
      }

      eof {
         puts "End of configuration"
         break
      }
      timeout {
         puts "\n\nFATAL ERROR: config prompt timeout in make config"
      }
   }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

log_file

send_user "\nKernel building for LTP test finishes!\n"
exit 0
