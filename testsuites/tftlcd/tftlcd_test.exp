#!/usr/bin/expect

source  ../kernel_config.exp
source  ../board_info.exp

log_file [log_file_name "$argv0"]

send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param0
source ../reboot_kernel.exp

step "Start testing."
set case_num 0

set timeout 10
sleep 5
send "\r"
expect ">"

incr case_num
if { $board_type == "BF548-EZKIT" } {
    send "modprobe bf54x-lq043\r"
} elseif { $board_type == "BF537-STAMP" } {
    send "modprobe bf537-lq035\r"
}
while 1 {
    expect {
        "FrameBuffer initializing.*Done.*>" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 15
incr case_num
send "video_test\r"
while 1 {
    expect {
        -re "\r\n\[a-zA-Z0-9]" {
            case_fail $case_num
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

incr case_num
send -s "\3"
while 1 {
    expect {
        "root:~>" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
if { $board_type == "BF548-EZKIT" } {
    send "rmmod bf54x-lq043\r"
} elseif { $board_type == "BF537-STAMP" } {
    send "rmmod bf537-lq035\r"
}
while 1 {
    expect {
        -re "Unregister LCD driver.*>" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send "lsmod\r" 
while 1 {
    expect {
        -re ">" {         
            case_pass $case_num
            break
        }
        "lq0.*>" {
            case_fail $case_num
        }
        timeout {
            case_fail $case_num
        }
    }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n" 

send_user "Ending $argv0\n"

log_file
