#!/usr/bin/expect
log_file build_pound_kernel_log
send_user "Starting build_pound_kernel.exp\n"

set user /home/test
set uclinux_path $user/checkouts/kernel/uClinux-dist
set dxe_filename linux
set ttydev /dev/ttyS0
set send_slow {1 0.1}

set board_type [lindex $argv 0]
send_log "\n#### board_type is $board_type\n"

if { $argc < 1} {
puts "Please input: board_type."
exit
}

if { $argc >= 2} {
   set uclinux_path       [lindex $argv 1]
   send_log "\n#### uclinux_path is $uclinux_path\n"
}

proc step { message } {

  global step_sequence_number

  puts "\n*******************************************************************"
  puts "STEP $step_sequence_number: $message\n\n"
  send_log "\n************** STEP $step_sequence_number: $message\n\n"
  incr step_sequence_number
}

set step_sequence_number    1

step "Apply pound patch."

cd $uclinux_path/lib/
exec rm -rf $uclinux_path/lib/libssl
catch {exec tar zxf $user/openssl-0.9.8c.tar.gz}
exec patch -p0 < ../bfin_patch/libssl_patch/libssl_bfin.patch
exec mv openssl-0.9.8c libssl

step "Change config file in /vender folder."

cd $uclinux_path
sleep 3
 set timeout 2
      spawn ex vendors/AnalogDevices/$board_type/Makefile
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/BLOCKS\r"
      expect "BLOCKS*="
      send "d\r"
      expect ":"
      send "i\r"
      sleep .5
      send "BLOCKS = 16384\r"
      sleep .5
      send ".\r"
      expect ":"
      send "wq\r"
      expect eof



step "Make config."

cd $uclinux_path
set timeout 300
spawn make config


while 1 {
   expect {

       -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
             send "$board_type\r"
      }

      "\\\(*) \\\[*]" {
	     send "\r"
      }

      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
             
      }
   }
}

send_log "\n\n#### Set config under $uclinux_path/config folder.\n\n"

cd $uclinux_path/config
sleep 3
 set timeout 2
      spawn ex .config
      expect {
         "Entering Ex mode*Normal mode." { }

         "already exists!" {
            send "e\r"
            sleep 1
         }
      }
      sleep 1
      send "/CONFIG_LIB_LIBSSL_FORCE\[ =]\r"
      expect "CONFIG_LIB_LIBSSL_FORCE\[ =]"
      send "d\r"
      sleep .5
      expect ":"
      send "i\r"
      sleep .5
      send "CONFIG_LIB_LIBSSL_FORCE=y\r"
      send ".\r"
      expect ":"
      sleep .5
      
      send "/CONFIG_USER_POUND\[ =]\r"
      expect "CONFIG_USER_POUND\[ =]"
      send "d\r"
      sleep .5
      expect ":"
      send "i\r"
      sleep .5
      send "CONFIG_USER_POUND=y\r"
      send ".\r"
      expect ":"
      sleep .5

      send "wq\r"
      expect eof


cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
   expect {
   
   	   -re "AnalogDevices Products .*BF533-EZKIT, BF533-STAMP, BF537-STAMP.*\\\[.*]" {
	     send "$board_type\r"
      } 
   
   	   -re "Customize Kernel Settings.*CONFIG_DEFAULTS_KERNEL.*\\\[././.]" {
             send "y\r"
      }

           -re "Customize Vendor/User Settings.*CONFIG_DEFAULTS_VENDOR.*\\\[././.]" {
             send "y\r"
      }

#          -re "Build libSSL.*CONFIG_LIB_LIBSSL_FORCE.*\\\[.*]" {
#             send "y\r"
#      }
#
#          -re "pound.*CONFIG_USER_POUND.*\\\[.*]" {
#             send "y\r"
#      }
       
       "\\\(*) \\\[*]" {
             send "\r"
      }

     
      -re "\[cC]hoice\\\[.*]:" {
             send "\r"
      }

      eof {
	     puts "End of configuration"
	     break
      }
      timeout {
	     puts "\n\nFATAL ERROR: config prompt timeout in make config"
      }
   }
}

step "Make"

cd $uclinux_path
spawn make
set timeout 1200
set bfin_make_status failure
while 1 {
      expect {
	     "Entering directory" { }
	     "Leaving directory" { set bfin_make_status success }
	     "Error" {set bfin_make_status failure }
	     "/bin/sh" { }
	     eof { break }
      }
}

if { $bfin_make_status == "failure" } {
      puts "ERROR: Error somewhere during make"

}


step "Copy linux"
 
set timeout 8
cd $uclinux_path
exec cp images/linux  /tftpboot

# Check the size, time, and date just to be sure.
cd /tftpboot
set dxe_confirmation [exec ls -l $dxe_filename]

log_file
 
send_user "Ending build_pound_kernel.exp\n"


