hostname blackfin
mount -t proc proc /proc
mount -t ramfs ramfs /var
mount -t sysfs sysfs /sys
mount -t devpts devpts /dev/pts
[ -d /proc/bus/usb ] && mount -t usbfs usbfs /proc/bus/usb
[ -d /sys/kernel/debug ] && mount -t debugfs debugfs /sys/kernel/debug
[ -d /proc/sys/fs/binfmt_misc ] && mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
[ -d /sys/kernel/security ] && mount -t securityfs securityfs /sys/kernel/security
grep -qs nfsd /proc/filesystems && mount -t nfsd nfsd /proc/fs/nfsd
if [ -e /bin/mdev ] ; then
	echo /bin/mdev 2>/dev/null > /proc/sys/kernel/hotplug
	/bin/mdev -s 2> /dev/null
fi
mkdir /var/tmp /var/log /var/run /var/lock

# Create meaningful soft links for /dev/mtd* 
ln -sfn /dev/mtd1 /dev/uboot
ln -sfn /dev/mtd2 /dev/env_uboot
ln -sfn /dev/mtd3 /dev/env_uboot_r
ln -sfn /dev/mtd4 /dev/linux
ln -sfn /dev/mtd5 /dev/calib

# Mount the application flash to /mnt/app
echo "Mounting Application Flash..."
mkdir /mnt/app
mount -t jffs2 /dev/mtdblock6 /mnt/app

echo "Loading Memory DMA kernel module..."
insmod /lib/modules/`uname -r`/bfdma.ko


# Detect first-time-boot if not valid ethaddr u-boot environment available

if test "`fw_printenv | grep ethaddr`" = ""
then
	echo ">>> Fist-time-boot: ethaddr not yet defined in u-boot variables. <<<"
	ifconfig eth0 down
	ifconfig eth0 hw ether 00:20:e3:23:00:00
	if test -e /mnt/app/config
	then
		echo "Use settings from config file instead default."
		# Use IP, GATEWAYIP, SERVERIP from configuration file. 
		# Useful for uclinux/uboot migration.
		ipaddr=`grep "^IP" /mnt/app/config | awk '{print $2}'`
		gatewayip=`grep "^GATEWAYIP" /mnt/app/config | awk '{print $2}'`
		serverip=`grep "^SERVERIP" /mnt/app/config | awk '{print $2}'`
	fi

	if test -z $ipaddr
	then
		ipaddr=192.168.11.10
	else
		echo "Use IP from config file: " $ipaddr
	fi
        if test -z $gatewayip
        then
                gatewayip=192.168.11.1
        else
                echo "Use GATEWAYIP from config file: " $gatewayip
        fi
        if test -z $serverip
        then
                serverip=192.168.11.2
        else
                echo "Use SERVERIP from config file: " $serverip
        fi

	ifconfig eth0 $ipaddr
	route add -net default gw $gatewayip
	ifconfig eth0 up
	tftp $serverip -g -r runinit.sh -l /home/runinit.sh

	if test -e /home/runinit.sh
	then
	       cd /home
	       chmod +x runinit.sh
	       ./runinit.sh &
	       cd /
	fi
else
	ifconfig eth0 down
	ifconfig eth0 hw ether `fw_printenv | grep "ethaddr" | sed -e s/ethaddr=//g`
	if test "`fw_printenv | grep ipaddr= | sed -e s/ipaddr=//g`" = "dhcp"
	then
		# DHCP is configured => Launch dhcp daemon
		ifconfig eth0 up
		dhcpcd &
		echo "Using DHCP."
	else
		ifconfig eth0 `fw_printenv | grep "ipaddr=" | sed -e s/ipaddr=//g`
		route add -net default gw `fw_printenv | grep "gatewayip=" | sed -e s/gatewayip=//g`
		echo ifconfig eth0 `fw_printenv | grep "ipaddr=" | sed -e s/ipaddr=//g`
		ifconfig eth0 up
	fi
fi


ifconfig lo 127.0.0.1
inetd &

# Send out two gratuitious arp request
arping -c 2 -w 1 `ifconfig eth0 | grep "inet" | awk '{print $2}' | sed -e s/addr://g`

#cat /etc/issue
cat /etc/motd

#start webserver
echo "Starting Webserver"
boa -f /etc/boa.conf&

#launch user specific application script
if test -e /mnt/app/runapp.sh
then
       cd /mnt/app
       ./runapp.sh &
       cd /
fi

