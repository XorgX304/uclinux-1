hostname blackfin
mount -t proc proc /proc
mount -t ramfs ramfs /var
mount -t sysfs sysfs /sys
mount -t devpts devpts /dev/pts
[ -d /proc/bus/usb ] && mount -t usbfs usbfs /proc/bus/usb
[ -d /sys/kernel/debug ] && mount -t debugfs debugfs /sys/kernel/debug
[ -d /proc/sys/fs/binfmt_misc ] && mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
[ -d /sys/kernel/security ] && mount -t securityfs securityfs /sys/kernel/security
grep -qs nfsd /proc/filesystems && mount -t nfsd nfsd /proc/fs/nfsd
if [ -e /bin/mdev ] ; then
	echo /bin/mdev 2>/dev/null > /proc/sys/kernel/hotplug
	/bin/mdev -s 2> /dev/null
fi
mkdir /var/tmp /var/log /var/run /var/lock

# Create meaningful soft links for /dev/mtd* 
ln -sfn /dev/mtd1 /uboot
ln -sfn /dev/mtd2 /env_uboot
ln -sfn /dev/mtd3 /env_uboot_r
ln -sfn /dev/mtd4 /env_board
ln -sfn /dev/mtd5 /env_user
ln -sfn /dev/mtd6 /linux
ln -sfn /dev/mtd7 /calib

# Mount the application flash to /app
echo "Mounting Application Flash..."
mkdir /app
mount -t jffs2 /dev/mtdblock8 /app

echo "Loading Memory DMA kernel module..."
insmod /lib/modules/`uname -r`/bfdma.ko

# Configure network interface based on /env_board and /env/user info


# Detect first-time-boot if not valid board config available
boardenv
if test $? -ne 0
then
	ifconfig eth0 down
	ifconfig eth0 hw ether 00:20:e3:23:00:00
	ifconfig eth0 192.168.11.10
	route add -net default gw 192.168.11.1
	ifconfig eth0 up
	tftp 172.18.1.76 -gr runinit.sh -l /home/runinit.sh

	if test -e /home/runinit.sh
	then
	       cd /home
	       chmod +x runinit.sh
	       ./runinit.sh &
	       cd /
	fi

else
	ifconfig eth0 down
	if test -e /env_board
	then
		ifconfig eth0 hw ether `boardenv | grep "^MAC" | awk '{print $2}'`
	fi

	if test -e /env_user
	then
		ifconfig eth0 `grep "^IP" /env_user | awk '{print $2}'`
		route add -net default gw `grep "^GW" /env_user | awk '{print $2}'`  
		echo export TFTPIP=`grep "^TFTPIP" /env_user | awk '{print $2}'` > /etc/oscarrc 
	fi
	ifconfig eth0 up
fi


ifconfig lo 127.0.0.1
inetd &

# Send out two gratuitious arp request
arping -c 2 -w 1 `ifconfig eth0 | grep "inet" | awk '{print $2}' | sed -e s/addr://g`

#cat /etc/issue
cat /etc/motd

#start webserver
echo "Starting Webserver"
boa -f /etc/boa.conf&

#launch user specific application script
if test -e /app/runapp.sh
then
       cd app
       ./runapp.sh &
       cd /
fi

