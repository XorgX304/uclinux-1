.EXPORT_ALL_VARIABLES:

include $(ROOTDIR)/vendors/config/common/config.arch

############################################################################
#
# The makefiles need to know how to do things in different contexts
# To save some pain we put it all here
#
# First settings we always want for all builds
#

MACHINE = bfin      # this is for uClibc
ARCH    = blackfin  # this is for the kernel
ENDIAN  = little

ifeq ($(CONFIG_FMT_USE_FDPIC_ELF),y)
CONFIGURE_HOST       := bfin-linux-uclibc
else
CONFIGURE_HOST       := bfin-uclinux
endif
CROSS_COMPILE        := $(CONFIGURE_HOST)-
CROSS                := $(CROSS_COMPILE)
KERNEL_CROSS_COMPILE := bfin-uclinux-

CC        = $(CROSS_COMPILE)gcc
AS        = $(CROSS_COMPILE)as
CXX       = $(CROSS_COMPILE)g++
AR        = $(CROSS_COMPILE)ar
LD        = $(CROSS_COMPILE)ld
NM        = $(CROSS_COMPILE)nm
OBJCOPY   = $(CROSS_COMPILE)objcopy
OBJDUMP   = $(CROSS_COMPILE)objdump
RANLIB    = $(CROSS_COMPILE)ranlib
ELF2FLT   = $(CROSS_COMPILE)elf2flt
STRIPTOOL = $(CROSS_COMPILE)strip
STRIP     = $(STRIPTOOL)
CC_FOR_BUILD = gcc

MKIMAGE   = $(CROSS_COMPILE)mkimage
MKCRAMFS  = $(CROSS_COMPILE)mkcramfs

############################################################################
#
# Settings for configure / autotools
#

CONFIGURE_BUILD := $(shell sh $(ROOTDIR)/tools/config.guess)
CONFIGURE_OPTS  := \
	--host=$(CONFIGURE_HOST) \
	--build=$(CONFIGURE_BUILD) \
	--prefix=/usr \
	--sysconfdir=/etc \
	--datadir=/usr/share \
	--mandir=/usr/share/man \
	--infodir=/usr/share/info \
	--localstatedir=/var/lib

# help out autotools a bit and force some tests that would otherwise
# fail because they rely on RUN tests rather than COMPILE

export ac_cv_func_malloc_0_nonnull  = yes
export ac_cv_func_realloc_0_nonnull = yes

cpu-$(CONFIG_BF531) := bf531
cpu-$(CONFIG_BF532) := bf532
cpu-$(CONFIG_BF533) := bf533
cpu-$(CONFIG_BF534) := bf534
cpu-$(CONFIG_BF536) := bf536
cpu-$(CONFIG_BF537) := bf537
cpu-$(CONFIG_BF548) := bf548
cpu-$(CONFIG_BF549) := bf549
cpu-$(CONFIG_BF561) := bf561

rev-$(CONFIG_BF_REV_0_0) := 0.0
rev-$(CONFIG_BF_REV_0_1) := 0.1
rev-$(CONFIG_BF_REV_0_2) := 0.2
rev-$(CONFIG_BF_REV_0_3) := 0.3
rev-$(CONFIG_BF_REV_0_4) := 0.4
rev-$(CONFIG_BF_REV_0_5) := 0.5
rev-$(CONFIG_BF_REV_ANY) := any
rev-$(CONFIG_BF_REV_NONE) := none

CPUFLAGS = -mcpu=$(cpu-y)-$(rev-y)

############################################################################
#
# Set up all our fun CFLAGS/CPPFLAGS/LDFLAGS.  Normalize our
# settings so we don't differentiate between user and lib.
#

ifneq ($(UCLINUX_BUILD_USER)$(UCLINUX_BUILD_LIB),)

CFLAGS-y   := -pipe -Wall
CXXFLAGS-y := -pipe -Wall
CPPFLAGS-y := -DEMBED -D__uClinux__ -I$(ROOTDIR)
LDFLAGS-y  := 
FLTFLAGS-y := 

CONFIG_ALL_DEBUG := n
ifdef CONFIG_LIB_DEBUG
	CONFIG_ALL_DEBUG := y
endif
ifdef CONFIG_USER_DEBUG
	CONFIG_ALL_DEBUG := y
endif

ifeq ($(CONFIG_ALL_DEBUG),y)
	CFLAGS-y  +=  -O0 -g
	STRIPTOOL := echo
	STRIP     := $(STRIPTOOL)
else
	CFLAGS-y  +=  -O2
endif

CFLAGS-$(CONFIG_BLACKFIN_CHECK_STACKFLOW) += -mstack-check-l1

LDFLAGS-$(CONFIG_FMT_USE_FLAT) += -Wl,-elf2flt

CFLAGS-$(CONFIG_FMT_USE_SEP_DATA) += -msep-data
LDFLAGS-$(CONFIG_FMT_USE_SEP_DATA) += -msep-data

CFLAGS-$(CONFIG_FMT_USE_FDPIC_ELF) += -mfdpic
LDFLAGS-$(CONFIG_FMT_USE_FDPIC_ELF) += -mfdpic

CFLAGS-$(CONFIG_FMT_USE_SHARED_FLAT) += -fpic -mid-shared-library
LDFLAGS-$(CONFIG_FMT_USE_SHARED_FLAT) += -Wl,-shared-lib-id,0 -mid-shared-library
ifdef UCLINUX_BUILD_USER
CFLAGS-$(CONFIG_FMT_USE_SHARED_FLAT) += -mshared-library-id=0
endif

CFLAGS   := $(CFLAGS-y)   $(VENDOR_CFLAGS)	$(CPUFLAGS)
CXXFLAGS := $(CXXFLAGS-y) $(VENDOR_CXXFLAGS)	$(CPUFLAGS)
CPPFLAGS := $(CPPFLAGS-y) $(VENDOR_CPPFLAGS)	$(CPUFLAGS)
LDFLAGS  := $(LDFLAGS-y)  $(VENDOR_LDFLAGS)	$(CPUFLAGS)
FLTFLAGS := $(FLTFLAGS-y) $(VENDOR_FLTFLAGS)

endif

############################################################################
#
# Allow people to quickly sync their staging directory with the actual
# toolchain as this will allow them to transparently build external apps
# against libraries from uClinux-dist
#

SYSROOT_LIBDIR = $(shell bfin-linux-uclibc-gcc $(CPUFLAGS) -print-file-name=libc.a | sed 's:/usr/lib/libc.a$$::')
ifeq ($(CONFIG_FMT_USE_FDPIC_ELF),y)
libs_install:
	cp -a $(STAGEDIR)/* $(SYSROOT_LIBDIR)/
else
libs_install:
	@printf "\nlibs_install: this only works for FDPIC ELF toolchains\n\n"
	@false
endif
